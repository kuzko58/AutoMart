{
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\src\\server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _users = _interopRequireDefault(require(\"../Routes/users\"));\n\nvar _admin = _interopRequireDefault(require(\"../Routes/admin\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar debug = (0, _debug[\"default\"])('AutoMart');\nvar app = (0, _express[\"default\"])();\napp.use((0, _morgan[\"default\"])('dev'));\napp.use(_express[\"default\"].json());\napp.get('/', function (req, res) {\n  res.send('Hello world!');\n});\napp.use('/api/v1', function (req, res) {\n  var sender = req.get('sender');\n\n  if (sender === 'user') {\n    (0, _users[\"default\"])(req, res);\n  } else if (sender === 'admin') {\n    (0, _admin[\"default\"])(req, res);\n  } else {\n    res.send('something went wrong');\n  }\n});\nvar port = process.env.PORT || 3000;\nvar server = app.listen(port, function () {\n  return debug(\"Listening on \".concat(port, \"...\"));\n});\nvar _default = server;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJkZWJ1ZyIsImFwcCIsInVzZSIsImV4cHJlc3MiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsInNlbmRlciIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInNlcnZlciIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOzs7O0FBRUEsSUFBTUEsS0FBSyxHQUFHLHVCQUFNLFVBQU4sQ0FBZDtBQUNBLElBQU1DLEdBQUcsR0FBRywwQkFBWjtBQUVBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSx3QkFBTyxLQUFQLENBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVI7QUFFQUgsR0FBRyxDQUFDSSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3pCQSxFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxjQUFUO0FBQ0QsQ0FGRDtBQUlBUCxHQUFHLENBQUNDLEdBQUosQ0FBUSxTQUFSLEVBQW1CLFVBQUNJLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9CLE1BQU1FLE1BQU0sR0FBR0gsR0FBRyxDQUFDRCxHQUFKLENBQVEsUUFBUixDQUFmOztBQUNBLE1BQUlJLE1BQU0sS0FBSyxNQUFmLEVBQXVCO0FBQ3JCLDJCQUFZSCxHQUFaLEVBQWlCQyxHQUFqQjtBQUNELEdBRkQsTUFFTyxJQUFJRSxNQUFNLEtBQUssT0FBZixFQUF3QjtBQUM3QiwyQkFBWUgsR0FBWixFQUFpQkMsR0FBakI7QUFDRCxHQUZNLE1BRUE7QUFDTEEsSUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsc0JBQVQ7QUFDRDtBQUNGLENBVEQ7QUFXQSxJQUFNRSxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQWpDO0FBQ0EsSUFBTUMsTUFBTSxHQUFHYixHQUFHLENBQUNjLE1BQUosQ0FBV0wsSUFBWCxFQUFpQjtBQUFBLFNBQU1WLEtBQUssd0JBQWlCVSxJQUFqQixTQUFYO0FBQUEsQ0FBakIsQ0FBZjtlQUVlSSxNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQU1BRUNISVxcRG9jdW1lbnRzXFxBbmRlbGFcXEF1dG8gTWFydFxcU2VydmVyXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBsb2dnZXIgZnJvbSAnbW9yZ2FuJztcbmltcG9ydCBEZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5cbmltcG9ydCB1c2Vyc1JvdXRlciBmcm9tICcuLi9Sb3V0ZXMvdXNlcnMnO1xuaW1wb3J0IGFkbWluUm91dGVyIGZyb20gJy4uL1JvdXRlcy9hZG1pbic7XG5cbmNvbnN0IGRlYnVnID0gRGVidWcoJ0F1dG9NYXJ0Jyk7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2UobG9nZ2VyKCdkZXYnKSk7XG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcblxuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICByZXMuc2VuZCgnSGVsbG8gd29ybGQhJyk7XG59KTtcblxuYXBwLnVzZSgnL2FwaS92MScsIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBzZW5kZXIgPSByZXEuZ2V0KCdzZW5kZXInKTtcbiAgaWYgKHNlbmRlciA9PT0gJ3VzZXInKSB7XG4gICAgdXNlcnNSb3V0ZXIocmVxLCByZXMpO1xuICB9IGVsc2UgaWYgKHNlbmRlciA9PT0gJ2FkbWluJykge1xuICAgIGFkbWluUm91dGVyKHJlcSwgcmVzKTtcbiAgfSBlbHNlIHtcbiAgICByZXMuc2VuZCgnc29tZXRoaW5nIHdlbnQgd3JvbmcnKTtcbiAgfVxufSk7XG5cbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDA7XG5jb25zdCBzZXJ2ZXIgPSBhcHAubGlzdGVuKHBvcnQsICgpID0+IGRlYnVnKGBMaXN0ZW5pbmcgb24gJHtwb3J0fS4uLmApKTtcblxuZXhwb3J0IGRlZmF1bHQgc2VydmVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "debug",
        "app",
        "use",
        "express",
        "json",
        "get",
        "req",
        "res",
        "send",
        "sender",
        "port",
        "process",
        "env",
        "PORT",
        "server",
        "listen"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,IAAMA,KAAK,GAAG,uBAAM,UAAN,CAAd;AACA,IAAMC,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAD,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEAH,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,cAAT;AACD,CAFD;AAIAP,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmB,UAACI,GAAD,EAAMC,GAAN,EAAc;AAC/B,MAAME,MAAM,GAAGH,GAAG,CAACD,GAAJ,CAAQ,QAAR,CAAf;;AACA,MAAII,MAAM,KAAK,MAAf,EAAuB;AACrB,2BAAYH,GAAZ,EAAiBC,GAAjB;AACD,GAFD,MAEO,IAAIE,MAAM,KAAK,OAAf,EAAwB;AAC7B,2BAAYH,GAAZ,EAAiBC,GAAjB;AACD,GAFM,MAEA;AACLA,IAAAA,GAAG,CAACC,IAAJ,CAAS,sBAAT;AACD;AACF,CATD;AAWA,IAAME,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,MAAM,GAAGb,GAAG,CAACc,MAAJ,CAAWL,IAAX,EAAiB;AAAA,SAAMV,KAAK,wBAAiBU,IAAjB,SAAX;AAAA,CAAjB,CAAf;eAEeI,M",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\src",
      "sourcesContent": [
        "import express from 'express';\nimport logger from 'morgan';\nimport Debug from 'debug';\n\nimport usersRouter from '../Routes/users';\nimport adminRouter from '../Routes/admin';\n\nconst debug = Debug('AutoMart');\nconst app = express();\n\napp.use(logger('dev'));\napp.use(express.json());\n\napp.get('/', (req, res) => {\n  res.send('Hello world!');\n});\n\napp.use('/api/v1', (req, res) => {\n  const sender = req.get('sender');\n  if (sender === 'user') {\n    usersRouter(req, res);\n  } else if (sender === 'admin') {\n    adminRouter(req, res);\n  } else {\n    res.send('something went wrong');\n  }\n});\n\nconst port = process.env.PORT || 3000;\nconst server = app.listen(port, () => debug(`Listening on ${port}...`));\n\nexport default server;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560439863376
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\Routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\Routes\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\Routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\Routes\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\Routes\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\Routes\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\Routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _adverts = _interopRequireDefault(require(\"../controllers/adverts\"));\n\nvar _members = _interopRequireDefault(require(\"../controllers/members\"));\n\nvar _orders = _interopRequireDefault(require(\"../controllers/orders\"));\n\nvar _flags = _interopRequireDefault(require(\"../controllers/flags\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express[\"default\"])();\nrouter.post('/auth/signup', _members[\"default\"].createUserAccount);\nrouter.post('/auth/signin', _members[\"default\"].logInUser);\nrouter.post('/advert/', _adverts[\"default\"].createNewAdvert);\nrouter.post('/order/', _orders[\"default\"].createNewOrder);\nrouter.post('/flag/', _flags[\"default\"].createNewFlag);\nrouter.patch('/order/:orderId/price', _orders[\"default\"].updateOrderPrice);\nrouter.patch('/advert/:advertId/status', _adverts[\"default\"].updateAdvertStatus);\nrouter.patch('/advert/:advertId/price', _adverts[\"default\"].updateAdvertPrice);\nrouter.get('/advert/:advertId', _adverts[\"default\"].getSpecificAdvert);\nrouter.get('/advert', _adverts[\"default\"].getFilteredAdverts);\n/* query string\n[ ?status=available ?status=available&min_price=XXXValue&max_price=XXXValue\n  ?status=available&condition=new ?status=available&condition=used\n?status=available&brand=XXXValue ?body_type=bodyType]\n*/\n\nrouter.get('/user/:userId/advert/', _adverts[\"default\"].getAllUserAdverts);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInBvc3QiLCJtZW1iZXJzIiwiY3JlYXRlVXNlckFjY291bnQiLCJsb2dJblVzZXIiLCJhZHZlcnRzIiwiY3JlYXRlTmV3QWR2ZXJ0Iiwib3JkZXJzIiwiY3JlYXRlTmV3T3JkZXIiLCJmbGFncyIsImNyZWF0ZU5ld0ZsYWciLCJwYXRjaCIsInVwZGF0ZU9yZGVyUHJpY2UiLCJ1cGRhdGVBZHZlcnRTdGF0dXMiLCJ1cGRhdGVBZHZlcnRQcmljZSIsImdldCIsImdldFNwZWNpZmljQWR2ZXJ0IiwiZ2V0RmlsdGVyZWRBZHZlcnRzIiwiZ2V0QWxsVXNlckFkdmVydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLE1BQU0sR0FBRywwQkFBZjtBQUVBQSxNQUFNLENBQUNDLElBQVAsQ0FBWSxjQUFaLEVBQTRCQyxvQkFBUUMsaUJBQXBDO0FBQ0FILE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLGNBQVosRUFBNEJDLG9CQUFRRSxTQUFwQztBQUNBSixNQUFNLENBQUNDLElBQVAsQ0FBWSxVQUFaLEVBQXdCSSxvQkFBUUMsZUFBaEM7QUFDQU4sTUFBTSxDQUFDQyxJQUFQLENBQVksU0FBWixFQUF1Qk0sbUJBQU9DLGNBQTlCO0FBQ0FSLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLFFBQVosRUFBc0JRLGtCQUFNQyxhQUE1QjtBQUVBVixNQUFNLENBQUNXLEtBQVAsQ0FBYSx1QkFBYixFQUFzQ0osbUJBQU9LLGdCQUE3QztBQUNBWixNQUFNLENBQUNXLEtBQVAsQ0FBYSwwQkFBYixFQUF5Q04sb0JBQVFRLGtCQUFqRDtBQUNBYixNQUFNLENBQUNXLEtBQVAsQ0FBYSx5QkFBYixFQUF3Q04sb0JBQVFTLGlCQUFoRDtBQUVBZCxNQUFNLENBQUNlLEdBQVAsQ0FBVyxtQkFBWCxFQUFnQ1Ysb0JBQVFXLGlCQUF4QztBQUNBaEIsTUFBTSxDQUFDZSxHQUFQLENBQVcsU0FBWCxFQUFzQlYsb0JBQVFZLGtCQUE5QjtBQUNBOzs7Ozs7QUFLQWpCLE1BQU0sQ0FBQ2UsR0FBUCxDQUFXLHVCQUFYLEVBQW9DVixvQkFBUWEsaUJBQTVDO2VBRWVsQixNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQU1BRUNISVxcRG9jdW1lbnRzXFxBbmRlbGFcXEF1dG8gTWFydFxcU2VydmVyXFxSb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUm91dGVyIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGFkdmVydHMgZnJvbSAnLi4vY29udHJvbGxlcnMvYWR2ZXJ0cyc7XG5pbXBvcnQgbWVtYmVycyBmcm9tICcuLi9jb250cm9sbGVycy9tZW1iZXJzJztcbmltcG9ydCBvcmRlcnMgZnJvbSAnLi4vY29udHJvbGxlcnMvb3JkZXJzJztcbmltcG9ydCBmbGFncyBmcm9tICcuLi9jb250cm9sbGVycy9mbGFncyc7XG5cbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xuXG5yb3V0ZXIucG9zdCgnL2F1dGgvc2lnbnVwJywgbWVtYmVycy5jcmVhdGVVc2VyQWNjb3VudCk7XG5yb3V0ZXIucG9zdCgnL2F1dGgvc2lnbmluJywgbWVtYmVycy5sb2dJblVzZXIpO1xucm91dGVyLnBvc3QoJy9hZHZlcnQvJywgYWR2ZXJ0cy5jcmVhdGVOZXdBZHZlcnQpO1xucm91dGVyLnBvc3QoJy9vcmRlci8nLCBvcmRlcnMuY3JlYXRlTmV3T3JkZXIpO1xucm91dGVyLnBvc3QoJy9mbGFnLycsIGZsYWdzLmNyZWF0ZU5ld0ZsYWcpO1xuXG5yb3V0ZXIucGF0Y2goJy9vcmRlci86b3JkZXJJZC9wcmljZScsIG9yZGVycy51cGRhdGVPcmRlclByaWNlKTtcbnJvdXRlci5wYXRjaCgnL2FkdmVydC86YWR2ZXJ0SWQvc3RhdHVzJywgYWR2ZXJ0cy51cGRhdGVBZHZlcnRTdGF0dXMpO1xucm91dGVyLnBhdGNoKCcvYWR2ZXJ0LzphZHZlcnRJZC9wcmljZScsIGFkdmVydHMudXBkYXRlQWR2ZXJ0UHJpY2UpO1xuXG5yb3V0ZXIuZ2V0KCcvYWR2ZXJ0LzphZHZlcnRJZCcsIGFkdmVydHMuZ2V0U3BlY2lmaWNBZHZlcnQpO1xucm91dGVyLmdldCgnL2FkdmVydCcsIGFkdmVydHMuZ2V0RmlsdGVyZWRBZHZlcnRzKTtcbi8qIHF1ZXJ5IHN0cmluZ1xuWyA/c3RhdHVzPWF2YWlsYWJsZSA/c3RhdHVzPWF2YWlsYWJsZSZtaW5fcHJpY2U9WFhYVmFsdWUmbWF4X3ByaWNlPVhYWFZhbHVlXG4gID9zdGF0dXM9YXZhaWxhYmxlJmNvbmRpdGlvbj1uZXcgP3N0YXR1cz1hdmFpbGFibGUmY29uZGl0aW9uPXVzZWRcbj9zdGF0dXM9YXZhaWxhYmxlJmJyYW5kPVhYWFZhbHVlID9ib2R5X3R5cGU9Ym9keVR5cGVdXG4qL1xucm91dGVyLmdldCgnL3VzZXIvOnVzZXJJZC9hZHZlcnQvJywgYWR2ZXJ0cy5nZXRBbGxVc2VyQWR2ZXJ0cyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "router",
        "post",
        "members",
        "createUserAccount",
        "logInUser",
        "adverts",
        "createNewAdvert",
        "orders",
        "createNewOrder",
        "flags",
        "createNewFlag",
        "patch",
        "updateOrderPrice",
        "updateAdvertStatus",
        "updateAdvertPrice",
        "get",
        "getSpecificAdvert",
        "getFilteredAdverts",
        "getAllUserAdverts"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,0BAAf;AAEAA,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA4BC,oBAAQC,iBAApC;AACAH,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA4BC,oBAAQE,SAApC;AACAJ,MAAM,CAACC,IAAP,CAAY,UAAZ,EAAwBI,oBAAQC,eAAhC;AACAN,MAAM,CAACC,IAAP,CAAY,SAAZ,EAAuBM,mBAAOC,cAA9B;AACAR,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAsBQ,kBAAMC,aAA5B;AAEAV,MAAM,CAACW,KAAP,CAAa,uBAAb,EAAsCJ,mBAAOK,gBAA7C;AACAZ,MAAM,CAACW,KAAP,CAAa,0BAAb,EAAyCN,oBAAQQ,kBAAjD;AACAb,MAAM,CAACW,KAAP,CAAa,yBAAb,EAAwCN,oBAAQS,iBAAhD;AAEAd,MAAM,CAACe,GAAP,CAAW,mBAAX,EAAgCV,oBAAQW,iBAAxC;AACAhB,MAAM,CAACe,GAAP,CAAW,SAAX,EAAsBV,oBAAQY,kBAA9B;AACA;;;;;;AAKAjB,MAAM,CAACe,GAAP,CAAW,uBAAX,EAAoCV,oBAAQa,iBAA5C;eAEelB,M",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\Routes",
      "sourcesContent": [
        "import Router from 'express';\nimport adverts from '../controllers/adverts';\nimport members from '../controllers/members';\nimport orders from '../controllers/orders';\nimport flags from '../controllers/flags';\n\nconst router = Router();\n\nrouter.post('/auth/signup', members.createUserAccount);\nrouter.post('/auth/signin', members.logInUser);\nrouter.post('/advert/', adverts.createNewAdvert);\nrouter.post('/order/', orders.createNewOrder);\nrouter.post('/flag/', flags.createNewFlag);\n\nrouter.patch('/order/:orderId/price', orders.updateOrderPrice);\nrouter.patch('/advert/:advertId/status', adverts.updateAdvertStatus);\nrouter.patch('/advert/:advertId/price', adverts.updateAdvertPrice);\n\nrouter.get('/advert/:advertId', adverts.getSpecificAdvert);\nrouter.get('/advert', adverts.getFilteredAdverts);\n/* query string\n[ ?status=available ?status=available&min_price=XXXValue&max_price=XXXValue\n  ?status=available&condition=new ?status=available&condition=used\n?status=available&brand=XXXValue ?body_type=bodyType]\n*/\nrouter.get('/user/:userId/advert/', adverts.getAllUserAdverts);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560436905235
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\controllers\\\\adverts.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers\\adverts.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers\\adverts.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers\\adverts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers",
        "sourceFileName": "adverts.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _storage = _interopRequireDefault(require(\"../storage\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Error = function Error(status, message) {\n  _classCallCheck(this, Error);\n\n  this.status = status;\n  this.message = message;\n};\n\nvar Success = function Success(status, message) {\n  _classCallCheck(this, Success);\n\n  this.status = status;\n  this.message = message;\n};\n\nfunction advertFilter(arr) {\n  var filteredArr = arr[0];\n  var index = 1;\n  var result = null;\n\n  function filterEngine() {\n    if (arr.length === 0) return arr;\n    if (arr.length === 1) return filteredArr;\n    if (index === arr.length) return result;\n    result = filteredArr.filter(function (obj) {\n      return arr[index].find(function (obj2) {\n        return obj.id === obj2.id;\n      });\n    });\n    filteredArr = result;\n    index += 1;\n    return filterEngine();\n  }\n\n  var result2 = filterEngine();\n  return result2;\n}\n\nvar adverts = {\n  createNewAdvert: function createNewAdvert(req, res) {\n    var Res = {\n      status: 201,\n      data: Object.assign({\n        created_on: new Date()\n      }, req.body)\n    };\n\n    _storage[\"default\"].adverts.push(Res.data);\n\n    res.status(Res.status).json(Res.data);\n  },\n  updateAdvertStatus: function updateAdvertStatus(req, res) {\n    var Res = {\n      status: 202,\n      data: {}\n    };\n\n    var advert = _storage[\"default\"].adverts.find(function (Advert) {\n      return Advert.id === parseInt(req.params.advertId, 10);\n    });\n\n    if (advert) {\n      advert.status = req.body.status;\n      Object.assign(Res.data, advert);\n    } else {\n      Res.status = 404;\n      Res.data = new Error(404, 'not  found');\n    }\n\n    res.status(Res.status).json(Res.data);\n  },\n  updateAdvertPrice: function updateAdvertPrice(req, res) {\n    var Res = {\n      status: 202,\n      data: {}\n    };\n\n    var advert = _storage[\"default\"].adverts.find(function (Advert) {\n      return Advert.id === parseInt(req.params.advertId, 10);\n    });\n\n    if (advert) {\n      advert.price = req.body.price;\n      Object.assign(Res.data, advert);\n    } else {\n      Res.status = 404;\n      Res.data = new Error(404, 'not found');\n    }\n\n    res.status(Res.status).json(Res.data);\n  },\n  getSpecificAdvert: function getSpecificAdvert(req, res) {\n    var Res = {\n      status: 200,\n      data: {}\n    };\n\n    var advert = _storage[\"default\"].adverts.find(function (Advert) {\n      return Advert.id === parseInt(req.params.advertId, 10);\n    });\n\n    if (advert) Object.assign(Res.data, advert);else {\n      Res.status = 404;\n      Res.data = new Error(404, 'not found');\n    }\n    res.status(Res.status).json(Res.data);\n  },\n  getAllAdverts: function getAllAdverts(req, res) {\n    var allAdverts = _storage[\"default\"].adverts;\n    if (allAdverts.length) res.status(200).json(allAdverts);else res.status(404).jason(new Error(404, 'no adverts found'));\n  },\n  getFilteredAdverts: function getFilteredAdverts(req, res) {\n    var unFilteredAdverts = [];\n\n    if (req.query.status) {\n      var allAdsForUnsoldCars = _storage[\"default\"].adverts.filter(function (ad) {\n        return ad.status === req.query.status;\n      });\n\n      unFilteredAdverts.push(allAdsForUnsoldCars);\n    }\n\n    if (req.query.body_type) {\n      var allAdsByBody = _storage[\"default\"].adverts.filter(function (ad) {\n        return ad.bodyType === req.query.body_type;\n      });\n\n      unFilteredAdverts.push(allAdsByBody);\n    }\n\n    if (req.query.brand) {\n      var allAdsByBrand = _storage[\"default\"].adverts.filter(function (ad) {\n        return ad.brand === req.query.brand;\n      });\n\n      unFilteredAdverts.push(allAdsByBrand);\n    }\n\n    if (req.query.condition) {\n      var allAdsByCondition = _storage[\"default\"].adverts.filter(function (ad) {\n        return ad.condition === req.query.condition;\n      });\n\n      unFilteredAdverts.push(allAdsByCondition);\n    }\n\n    if (req.query.min_price) {\n      var reqToInt = parseInt(req.query.min_price, 10);\n\n      var allAdsAboveMin = _storage[\"default\"].adverts.filter(function (ad) {\n        return ad.price >= reqToInt;\n      });\n\n      unFilteredAdverts.push(allAdsAboveMin);\n    }\n\n    if (req.query.max_price) {\n      var _reqToInt = parseInt(req.query.max_price, 10);\n\n      var allAdsBelowMax = _storage[\"default\"].adverts.filter(function (ad) {\n        return ad.price <= _reqToInt;\n      });\n\n      unFilteredAdverts.push(allAdsBelowMax);\n    }\n\n    if (unFilteredAdverts.length && unFilteredAdverts.every(function (arr) {\n      return arr.length > 0;\n    })) {\n      var filteredAdverts = advertFilter(unFilteredAdverts);\n      res.status(200).json(filteredAdverts);\n    } else res.status(204).json(new Error(204, 'No cars found with the specifications'));\n  },\n  getAllUserAdverts: function getAllUserAdverts(req, res) {\n    var userAdverts = _storage[\"default\"].adverts.filter(function (ad) {\n      return ad.owner === parseInt(req.params.userId, 10);\n    });\n\n    if (userAdverts.length > 0) res.status(200).json(userAdverts);else res.status(404).json(new Error(404, \"No adverts found for this user: \".concat(req.params.userId)));\n  },\n  deleteAdvert: function deleteAdvert(req, res) {\n    var advert = _storage[\"default\"].adverts.find(function (Advert) {\n      return Advert.id === parseInt(req.params.advertId, 10);\n    });\n\n    if (advert) {\n      _storage[\"default\"].adverts.splice(_storage[\"default\"].adverts.indexOf(advert), 1);\n\n      res.status(200).json(new Success(200, 'Advert successfully deleted'));\n    } else {\n      res.status(404).json(new Error(404, 'Advert not found'));\n    }\n  }\n};\nvar _default = adverts;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "adverts.js"
      ],
      "names": [
        "Error",
        "status",
        "message",
        "Success",
        "advertFilter",
        "arr",
        "filteredArr",
        "index",
        "result",
        "filterEngine",
        "length",
        "filter",
        "obj",
        "find",
        "obj2",
        "id",
        "result2",
        "adverts",
        "createNewAdvert",
        "req",
        "res",
        "Res",
        "data",
        "Object",
        "assign",
        "created_on",
        "Date",
        "body",
        "storage",
        "push",
        "json",
        "updateAdvertStatus",
        "advert",
        "Advert",
        "parseInt",
        "params",
        "advertId",
        "updateAdvertPrice",
        "price",
        "getSpecificAdvert",
        "getAllAdverts",
        "allAdverts",
        "jason",
        "getFilteredAdverts",
        "unFilteredAdverts",
        "query",
        "allAdsForUnsoldCars",
        "ad",
        "body_type",
        "allAdsByBody",
        "bodyType",
        "brand",
        "allAdsByBrand",
        "condition",
        "allAdsByCondition",
        "min_price",
        "reqToInt",
        "allAdsAboveMin",
        "max_price",
        "allAdsBelowMax",
        "every",
        "filteredAdverts",
        "getAllUserAdverts",
        "userAdverts",
        "owner",
        "userId",
        "deleteAdvert",
        "splice",
        "indexOf"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;IAEMA,K,GACJ,eAAYC,MAAZ,EAAoBC,OAApB,EAA6B;AAAA;;AAC3B,OAAKD,MAAL,GAAcA,MAAd;AACA,OAAKC,OAAL,GAAeA,OAAf;AACD,C;;IAGGC,O,GACJ,iBAAYF,MAAZ,EAAoBC,OAApB,EAA6B;AAAA;;AAC3B,OAAKD,MAAL,GAAcA,MAAd;AACA,OAAKC,OAAL,GAAeA,OAAf;AACD,C;;AAGH,SAASE,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,MAAIC,WAAW,GAAGD,GAAG,CAAC,CAAD,CAArB;AACA,MAAIE,KAAK,GAAG,CAAZ;AACA,MAAIC,MAAM,GAAG,IAAb;;AAEA,WAASC,YAAT,GAAwB;AACtB,QAAIJ,GAAG,CAACK,MAAJ,KAAe,CAAnB,EAAsB,OAAOL,GAAP;AACtB,QAAIA,GAAG,CAACK,MAAJ,KAAe,CAAnB,EAAsB,OAAOJ,WAAP;AACtB,QAAIC,KAAK,KAAKF,GAAG,CAACK,MAAlB,EAA0B,OAAOF,MAAP;AAC1BA,IAAAA,MAAM,GAAGF,WAAW,CAACK,MAAZ,CAAmB,UAAAC,GAAG;AAAA,aAAIP,GAAG,CAACE,KAAD,CAAH,CAAWM,IAAX,CAAgB,UAAAC,IAAI;AAAA,eAAIF,GAAG,CAACG,EAAJ,KAAWD,IAAI,CAACC,EAApB;AAAA,OAApB,CAAJ;AAAA,KAAtB,CAAT;AACAT,IAAAA,WAAW,GAAGE,MAAd;AACAD,IAAAA,KAAK,IAAI,CAAT;AACA,WAAOE,YAAY,EAAnB;AACD;;AACD,MAAMO,OAAO,GAAGP,YAAY,EAA5B;AACA,SAAOO,OAAP;AACD;;AAED,IAAMC,OAAO,GAAG;AACdC,EAAAA,eAAe,EAAE,yBAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,QAAMC,GAAG,GAAG;AACVpB,MAAAA,MAAM,EAAE,GADE;AAEVqB,MAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAc;AAAEC,QAAAA,UAAU,EAAE,IAAIC,IAAJ;AAAd,OAAd,EAA0CP,GAAG,CAACQ,IAA9C;AAFI,KAAZ;;AAIAC,wBAAQX,OAAR,CAAgBY,IAAhB,CAAqBR,GAAG,CAACC,IAAzB;;AACAF,IAAAA,GAAG,CAACnB,MAAJ,CAAWoB,GAAG,CAACpB,MAAf,EAAuB6B,IAAvB,CAA4BT,GAAG,CAACC,IAAhC;AACD,GARa;AASdS,EAAAA,kBAAkB,EAAE,4BAACZ,GAAD,EAAMC,GAAN,EAAc;AAChC,QAAMC,GAAG,GAAG;AACVpB,MAAAA,MAAM,EAAE,GADE;AAEVqB,MAAAA,IAAI,EAAE;AAFI,KAAZ;;AAIA,QAAMU,MAAM,GAAGJ,oBAAQX,OAAR,CAAgBJ,IAAhB,CAAqB,UAAAoB,MAAM;AAAA,aAAIA,MAAM,CAAClB,EAAP,KAAcmB,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAWC,QAAZ,EAAsB,EAAtB,CAA1B;AAAA,KAA3B,CAAf;;AACA,QAAIJ,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAAC/B,MAAP,GAAgBkB,GAAG,CAACQ,IAAJ,CAAS1B,MAAzB;AACAsB,MAAAA,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACC,IAAlB,EAAwBU,MAAxB;AACD,KAHD,MAGO;AACLX,MAAAA,GAAG,CAACpB,MAAJ,GAAa,GAAb;AACAoB,MAAAA,GAAG,CAACC,IAAJ,GAAW,IAAItB,KAAJ,CAAU,GAAV,EAAe,YAAf,CAAX;AACD;;AACDoB,IAAAA,GAAG,CAACnB,MAAJ,CAAWoB,GAAG,CAACpB,MAAf,EAAuB6B,IAAvB,CAA4BT,GAAG,CAACC,IAAhC;AACD,GAvBa;AAwBde,EAAAA,iBAAiB,EAAE,2BAAClB,GAAD,EAAMC,GAAN,EAAc;AAC/B,QAAMC,GAAG,GAAG;AACVpB,MAAAA,MAAM,EAAE,GADE;AAEVqB,MAAAA,IAAI,EAAE;AAFI,KAAZ;;AAIA,QAAMU,MAAM,GAAGJ,oBAAQX,OAAR,CAAgBJ,IAAhB,CAAqB,UAAAoB,MAAM;AAAA,aAAIA,MAAM,CAAClB,EAAP,KAAcmB,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAWC,QAAZ,EAAsB,EAAtB,CAA1B;AAAA,KAA3B,CAAf;;AACA,QAAIJ,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACM,KAAP,GAAenB,GAAG,CAACQ,IAAJ,CAASW,KAAxB;AACAf,MAAAA,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACC,IAAlB,EAAwBU,MAAxB;AACD,KAHD,MAGO;AACLX,MAAAA,GAAG,CAACpB,MAAJ,GAAa,GAAb;AACAoB,MAAAA,GAAG,CAACC,IAAJ,GAAW,IAAItB,KAAJ,CAAU,GAAV,EAAe,WAAf,CAAX;AACD;;AACDoB,IAAAA,GAAG,CAACnB,MAAJ,CAAWoB,GAAG,CAACpB,MAAf,EAAuB6B,IAAvB,CAA4BT,GAAG,CAACC,IAAhC;AACD,GAtCa;AAuCdiB,EAAAA,iBAAiB,EAAE,2BAACpB,GAAD,EAAMC,GAAN,EAAc;AAC/B,QAAMC,GAAG,GAAG;AACVpB,MAAAA,MAAM,EAAE,GADE;AAEVqB,MAAAA,IAAI,EAAE;AAFI,KAAZ;;AAIA,QAAMU,MAAM,GAAGJ,oBAAQX,OAAR,CAAgBJ,IAAhB,CAAqB,UAAAoB,MAAM;AAAA,aAAIA,MAAM,CAAClB,EAAP,KAAcmB,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAWC,QAAZ,EAAsB,EAAtB,CAA1B;AAAA,KAA3B,CAAf;;AACA,QAAIJ,MAAJ,EAAYT,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACC,IAAlB,EAAwBU,MAAxB,EAAZ,KACK;AACHX,MAAAA,GAAG,CAACpB,MAAJ,GAAa,GAAb;AACAoB,MAAAA,GAAG,CAACC,IAAJ,GAAW,IAAItB,KAAJ,CAAU,GAAV,EAAe,WAAf,CAAX;AACD;AACDoB,IAAAA,GAAG,CAACnB,MAAJ,CAAWoB,GAAG,CAACpB,MAAf,EAAuB6B,IAAvB,CAA4BT,GAAG,CAACC,IAAhC;AACD,GAnDa;AAoDdkB,EAAAA,aAAa,EAAE,uBAACrB,GAAD,EAAMC,GAAN,EAAc;AAC3B,QAAMqB,UAAU,GAAGb,oBAAQX,OAA3B;AACA,QAAIwB,UAAU,CAAC/B,MAAf,EAAuBU,GAAG,CAACnB,MAAJ,CAAW,GAAX,EAAgB6B,IAAhB,CAAqBW,UAArB,EAAvB,KACKrB,GAAG,CAACnB,MAAJ,CAAW,GAAX,EAAgByC,KAAhB,CAAsB,IAAI1C,KAAJ,CAAU,GAAV,EAAe,kBAAf,CAAtB;AACN,GAxDa;AAyDd2C,EAAAA,kBAAkB,EAAE,4BAACxB,GAAD,EAAMC,GAAN,EAAc;AAChC,QAAMwB,iBAAiB,GAAG,EAA1B;;AACA,QAAIzB,GAAG,CAAC0B,KAAJ,CAAU5C,MAAd,EAAsB;AACpB,UAAM6C,mBAAmB,GAAGlB,oBAAQX,OAAR,CAAgBN,MAAhB,CAAuB,UAAAoC,EAAE;AAAA,eAAIA,EAAE,CAAC9C,MAAH,KAAckB,GAAG,CAAC0B,KAAJ,CAAU5C,MAA5B;AAAA,OAAzB,CAA5B;;AACA2C,MAAAA,iBAAiB,CAACf,IAAlB,CAAuBiB,mBAAvB;AACD;;AACD,QAAI3B,GAAG,CAAC0B,KAAJ,CAAUG,SAAd,EAAyB;AACvB,UAAMC,YAAY,GAAGrB,oBAAQX,OAAR,CAAgBN,MAAhB,CAAuB,UAAAoC,EAAE;AAAA,eAAIA,EAAE,CAACG,QAAH,KAAgB/B,GAAG,CAAC0B,KAAJ,CAAUG,SAA9B;AAAA,OAAzB,CAArB;;AACAJ,MAAAA,iBAAiB,CAACf,IAAlB,CAAuBoB,YAAvB;AACD;;AACD,QAAI9B,GAAG,CAAC0B,KAAJ,CAAUM,KAAd,EAAqB;AACnB,UAAMC,aAAa,GAAGxB,oBAAQX,OAAR,CAAgBN,MAAhB,CAAuB,UAAAoC,EAAE;AAAA,eAAIA,EAAE,CAACI,KAAH,KAAahC,GAAG,CAAC0B,KAAJ,CAAUM,KAA3B;AAAA,OAAzB,CAAtB;;AACAP,MAAAA,iBAAiB,CAACf,IAAlB,CAAuBuB,aAAvB;AACD;;AACD,QAAIjC,GAAG,CAAC0B,KAAJ,CAAUQ,SAAd,EAAyB;AACvB,UAAMC,iBAAiB,GAAG1B,oBAAQX,OAAR,CAAgBN,MAAhB,CAAuB,UAAAoC,EAAE;AAAA,eAAIA,EAAE,CAACM,SAAH,KAAiBlC,GAAG,CAAC0B,KAAJ,CAAUQ,SAA/B;AAAA,OAAzB,CAA1B;;AACAT,MAAAA,iBAAiB,CAACf,IAAlB,CAAuByB,iBAAvB;AACD;;AACD,QAAInC,GAAG,CAAC0B,KAAJ,CAAUU,SAAd,EAAyB;AACvB,UAAMC,QAAQ,GAAGtB,QAAQ,CAACf,GAAG,CAAC0B,KAAJ,CAAUU,SAAX,EAAsB,EAAtB,CAAzB;;AACA,UAAME,cAAc,GAAG7B,oBAAQX,OAAR,CAAgBN,MAAhB,CAAuB,UAAAoC,EAAE;AAAA,eAAIA,EAAE,CAACT,KAAH,IAAYkB,QAAhB;AAAA,OAAzB,CAAvB;;AACAZ,MAAAA,iBAAiB,CAACf,IAAlB,CAAuB4B,cAAvB;AACD;;AACD,QAAItC,GAAG,CAAC0B,KAAJ,CAAUa,SAAd,EAAyB;AACvB,UAAMF,SAAQ,GAAGtB,QAAQ,CAACf,GAAG,CAAC0B,KAAJ,CAAUa,SAAX,EAAsB,EAAtB,CAAzB;;AACA,UAAMC,cAAc,GAAG/B,oBAAQX,OAAR,CAAgBN,MAAhB,CAAuB,UAAAoC,EAAE;AAAA,eAAIA,EAAE,CAACT,KAAH,IAAYkB,SAAhB;AAAA,OAAzB,CAAvB;;AACAZ,MAAAA,iBAAiB,CAACf,IAAlB,CAAuB8B,cAAvB;AACD;;AACD,QAAIf,iBAAiB,CAAClC,MAAlB,IAA4BkC,iBAAiB,CAACgB,KAAlB,CAAwB,UAAAvD,GAAG;AAAA,aAAIA,GAAG,CAACK,MAAJ,GAAa,CAAjB;AAAA,KAA3B,CAAhC,EAAgF;AAC9E,UAAMmD,eAAe,GAAGzD,YAAY,CAACwC,iBAAD,CAApC;AACAxB,MAAAA,GAAG,CAACnB,MAAJ,CAAW,GAAX,EAAgB6B,IAAhB,CAAqB+B,eAArB;AACD,KAHD,MAGOzC,GAAG,CAACnB,MAAJ,CAAW,GAAX,EAAgB6B,IAAhB,CAAqB,IAAI9B,KAAJ,CAAU,GAAV,EAAe,uCAAf,CAArB;AACR,GAzFa;AA0Fd8D,EAAAA,iBAAiB,EAAE,2BAAC3C,GAAD,EAAMC,GAAN,EAAc;AAC/B,QAAM2C,WAAW,GAAGnC,oBAAQX,OAAR,CAAgBN,MAAhB,CAAuB,UAAAoC,EAAE;AAAA,aAAIA,EAAE,CAACiB,KAAH,KAAa9B,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAW8B,MAAZ,EAAoB,EAApB,CAAzB;AAAA,KAAzB,CAApB;;AACA,QAAIF,WAAW,CAACrD,MAAZ,GAAqB,CAAzB,EAA4BU,GAAG,CAACnB,MAAJ,CAAW,GAAX,EAAgB6B,IAAhB,CAAqBiC,WAArB,EAA5B,KACK3C,GAAG,CAACnB,MAAJ,CAAW,GAAX,EAAgB6B,IAAhB,CAAqB,IAAI9B,KAAJ,CAAU,GAAV,4CAAkDmB,GAAG,CAACgB,MAAJ,CAAW8B,MAA7D,EAArB;AACN,GA9Fa;AAgGdC,EAAAA,YAAY,EAAE,sBAAC/C,GAAD,EAAMC,GAAN,EAAc;AAC1B,QAAMY,MAAM,GAAGJ,oBAAQX,OAAR,CAAgBJ,IAAhB,CAAqB,UAAAoB,MAAM;AAAA,aAAIA,MAAM,CAAClB,EAAP,KAAcmB,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAWC,QAAZ,EAAsB,EAAtB,CAA1B;AAAA,KAA3B,CAAf;;AACA,QAAIJ,MAAJ,EAAY;AACVJ,0BAAQX,OAAR,CAAgBkD,MAAhB,CAAuBvC,oBAAQX,OAAR,CAAgBmD,OAAhB,CAAwBpC,MAAxB,CAAvB,EAAwD,CAAxD;;AACAZ,MAAAA,GAAG,CAACnB,MAAJ,CAAW,GAAX,EAAgB6B,IAAhB,CAAqB,IAAI3B,OAAJ,CAAY,GAAZ,EAAiB,6BAAjB,CAArB;AACD,KAHD,MAGO;AACLiB,MAAAA,GAAG,CAACnB,MAAJ,CAAW,GAAX,EAAgB6B,IAAhB,CAAqB,IAAI9B,KAAJ,CAAU,GAAV,EAAe,kBAAf,CAArB;AACD;AACF;AAxGa,CAAhB;eA2GeiB,O",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers",
      "sourcesContent": [
        "import storage from '../storage';\n\nclass Error {\n  constructor(status, message) {\n    this.status = status;\n    this.message = message;\n  }\n}\n\nclass Success {\n  constructor(status, message) {\n    this.status = status;\n    this.message = message;\n  }\n}\n\nfunction advertFilter(arr) {\n  let filteredArr = arr[0];\n  let index = 1;\n  let result = null;\n\n  function filterEngine() {\n    if (arr.length === 0) return arr;\n    if (arr.length === 1) return filteredArr;\n    if (index === arr.length) return result;\n    result = filteredArr.filter(obj => arr[index].find(obj2 => obj.id === obj2.id));\n    filteredArr = result;\n    index += 1;\n    return filterEngine();\n  }\n  const result2 = filterEngine();\n  return result2;\n}\n\nconst adverts = {\n  createNewAdvert: (req, res) => {\n    const Res = {\n      status: 201,\n      data: Object.assign({ created_on: new Date() }, req.body),\n    };\n    storage.adverts.push(Res.data);\n    res.status(Res.status).json(Res.data);\n  },\n  updateAdvertStatus: (req, res) => {\n    const Res = {\n      status: 202,\n      data: {},\n    };\n    const advert = storage.adverts.find(Advert => Advert.id === parseInt(req.params.advertId, 10));\n    if (advert) {\n      advert.status = req.body.status;\n      Object.assign(Res.data, advert);\n    } else {\n      Res.status = 404;\n      Res.data = new Error(404, 'not  found');\n    }\n    res.status(Res.status).json(Res.data);\n  },\n  updateAdvertPrice: (req, res) => {\n    const Res = {\n      status: 202,\n      data: {},\n    };\n    const advert = storage.adverts.find(Advert => Advert.id === parseInt(req.params.advertId, 10));\n    if (advert) {\n      advert.price = req.body.price;\n      Object.assign(Res.data, advert);\n    } else {\n      Res.status = 404;\n      Res.data = new Error(404, 'not found');\n    }\n    res.status(Res.status).json(Res.data);\n  },\n  getSpecificAdvert: (req, res) => {\n    const Res = {\n      status: 200,\n      data: {},\n    };\n    const advert = storage.adverts.find(Advert => Advert.id === parseInt(req.params.advertId, 10));\n    if (advert) Object.assign(Res.data, advert);\n    else {\n      Res.status = 404;\n      Res.data = new Error(404, 'not found');\n    }\n    res.status(Res.status).json(Res.data);\n  },\n  getAllAdverts: (req, res) => {\n    const allAdverts = storage.adverts;\n    if (allAdverts.length) res.status(200).json(allAdverts);\n    else res.status(404).jason(new Error(404, 'no adverts found'));\n  },\n  getFilteredAdverts: (req, res) => {\n    const unFilteredAdverts = [];\n    if (req.query.status) {\n      const allAdsForUnsoldCars = storage.adverts.filter(ad => ad.status === req.query.status);\n      unFilteredAdverts.push(allAdsForUnsoldCars);\n    }\n    if (req.query.body_type) {\n      const allAdsByBody = storage.adverts.filter(ad => ad.bodyType === req.query.body_type);\n      unFilteredAdverts.push(allAdsByBody);\n    }\n    if (req.query.brand) {\n      const allAdsByBrand = storage.adverts.filter(ad => ad.brand === req.query.brand);\n      unFilteredAdverts.push(allAdsByBrand);\n    }\n    if (req.query.condition) {\n      const allAdsByCondition = storage.adverts.filter(ad => ad.condition === req.query.condition);\n      unFilteredAdverts.push(allAdsByCondition);\n    }\n    if (req.query.min_price) {\n      const reqToInt = parseInt(req.query.min_price, 10);\n      const allAdsAboveMin = storage.adverts.filter(ad => ad.price >= reqToInt);\n      unFilteredAdverts.push(allAdsAboveMin);\n    }\n    if (req.query.max_price) {\n      const reqToInt = parseInt(req.query.max_price, 10);\n      const allAdsBelowMax = storage.adverts.filter(ad => ad.price <= reqToInt);\n      unFilteredAdverts.push(allAdsBelowMax);\n    }\n    if (unFilteredAdverts.length && unFilteredAdverts.every(arr => arr.length > 0)) {\n      const filteredAdverts = advertFilter(unFilteredAdverts);\n      res.status(200).json(filteredAdverts);\n    } else res.status(204).json(new Error(204, 'No cars found with the specifications'));\n  },\n  getAllUserAdverts: (req, res) => {\n    const userAdverts = storage.adverts.filter(ad => ad.owner === parseInt(req.params.userId, 10));\n    if (userAdverts.length > 0) res.status(200).json(userAdverts);\n    else res.status(404).json(new Error(404, `No adverts found for this user: ${req.params.userId}`));\n  },\n\n  deleteAdvert: (req, res) => {\n    const advert = storage.adverts.find(Advert => Advert.id === parseInt(req.params.advertId, 10));\n    if (advert) {\n      storage.adverts.splice(storage.adverts.indexOf(advert), 1);\n      res.status(200).json(new Success(200, 'Advert successfully deleted'));\n    } else {\n      res.status(404).json(new Error(404, 'Advert not found'));\n    }\n  },\n};\n\nexport default adverts;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560431475481
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\storage.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\storage.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\storage.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\storage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
        "sourceFileName": "storage.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar storage = {\n  users: [{\n    id: 2,\n    email: 'johndoe@example.com',\n    firstName: 'John',\n    lastName: 'Doe',\n    password: 'Password',\n    address: 'Lagos',\n    isAdmin: false\n  }],\n  adverts: [{\n    id: 1,\n    owner: 2,\n    created_on: '',\n    condition: 'New',\n    status: 'available',\n    price: 13700000,\n    brand: 'Toyota',\n    model: 'Avalon',\n    body_type: 'Sedan'\n  }, {\n    id: 2,\n    owner: 1,\n    created_on: '',\n    condition: 'New',\n    status: 'available',\n    price: 13700000,\n    brand: 'Toyota',\n    model: 'Avalon',\n    body_type: 'Sedan'\n  }],\n  orders: [{\n    created_on: '',\n    id: 4,\n    buyer: 2,\n    carId: 1,\n    price: 13700000,\n    price_offer: 11000000,\n    status: 'pending'\n  }],\n  flags: [{\n    id: 1,\n    carId: 1,\n    created_on: '',\n    reason: 'fraudulent',\n    description: 'String'\n  }]\n};\nvar _default = storage;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JhZ2UuanMiXSwibmFtZXMiOlsic3RvcmFnZSIsInVzZXJzIiwiaWQiLCJlbWFpbCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwicGFzc3dvcmQiLCJhZGRyZXNzIiwiaXNBZG1pbiIsImFkdmVydHMiLCJvd25lciIsImNyZWF0ZWRfb24iLCJjb25kaXRpb24iLCJzdGF0dXMiLCJwcmljZSIsImJyYW5kIiwibW9kZWwiLCJib2R5X3R5cGUiLCJvcmRlcnMiLCJidXllciIsImNhcklkIiwicHJpY2Vfb2ZmZXIiLCJmbGFncyIsInJlYXNvbiIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxPQUFPLEdBQUc7QUFDZEMsRUFBQUEsS0FBSyxFQUFFLENBQUM7QUFDTkMsSUFBQUEsRUFBRSxFQUFFLENBREU7QUFFTkMsSUFBQUEsS0FBSyxFQUFFLHFCQUZEO0FBR05DLElBQUFBLFNBQVMsRUFBRSxNQUhMO0FBSU5DLElBQUFBLFFBQVEsRUFBRSxLQUpKO0FBS05DLElBQUFBLFFBQVEsRUFBRSxVQUxKO0FBTU5DLElBQUFBLE9BQU8sRUFBRSxPQU5IO0FBT05DLElBQUFBLE9BQU8sRUFBRTtBQVBILEdBQUQsQ0FETztBQVVkQyxFQUFBQSxPQUFPLEVBQUUsQ0FBQztBQUNSUCxJQUFBQSxFQUFFLEVBQUUsQ0FESTtBQUVSUSxJQUFBQSxLQUFLLEVBQUUsQ0FGQztBQUdSQyxJQUFBQSxVQUFVLEVBQUUsRUFISjtBQUlSQyxJQUFBQSxTQUFTLEVBQUUsS0FKSDtBQUtSQyxJQUFBQSxNQUFNLEVBQUUsV0FMQTtBQU1SQyxJQUFBQSxLQUFLLEVBQUUsUUFOQztBQU9SQyxJQUFBQSxLQUFLLEVBQUUsUUFQQztBQVFSQyxJQUFBQSxLQUFLLEVBQUUsUUFSQztBQVNSQyxJQUFBQSxTQUFTLEVBQUU7QUFUSCxHQUFELEVBWVQ7QUFDRWYsSUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRVEsSUFBQUEsS0FBSyxFQUFFLENBRlQ7QUFHRUMsSUFBQUEsVUFBVSxFQUFFLEVBSGQ7QUFJRUMsSUFBQUEsU0FBUyxFQUFFLEtBSmI7QUFLRUMsSUFBQUEsTUFBTSxFQUFFLFdBTFY7QUFNRUMsSUFBQUEsS0FBSyxFQUFFLFFBTlQ7QUFPRUMsSUFBQUEsS0FBSyxFQUFFLFFBUFQ7QUFRRUMsSUFBQUEsS0FBSyxFQUFFLFFBUlQ7QUFTRUMsSUFBQUEsU0FBUyxFQUFFO0FBVGIsR0FaUyxDQVZLO0FBa0NkQyxFQUFBQSxNQUFNLEVBQUUsQ0FBQztBQUNQUCxJQUFBQSxVQUFVLEVBQUUsRUFETDtBQUVQVCxJQUFBQSxFQUFFLEVBQUUsQ0FGRztBQUdQaUIsSUFBQUEsS0FBSyxFQUFFLENBSEE7QUFJUEMsSUFBQUEsS0FBSyxFQUFFLENBSkE7QUFLUE4sSUFBQUEsS0FBSyxFQUFFLFFBTEE7QUFNUE8sSUFBQUEsV0FBVyxFQUFFLFFBTk47QUFPUFIsSUFBQUEsTUFBTSxFQUFFO0FBUEQsR0FBRCxDQWxDTTtBQTJDZFMsRUFBQUEsS0FBSyxFQUFFLENBQUM7QUFDTnBCLElBQUFBLEVBQUUsRUFBRSxDQURFO0FBRU5rQixJQUFBQSxLQUFLLEVBQUUsQ0FGRDtBQUdOVCxJQUFBQSxVQUFVLEVBQUUsRUFITjtBQUlOWSxJQUFBQSxNQUFNLEVBQUUsWUFKRjtBQUtOQyxJQUFBQSxXQUFXLEVBQUU7QUFMUCxHQUFEO0FBM0NPLENBQWhCO2VBb0RleEIsTyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFNQUVDSElcXERvY3VtZW50c1xcQW5kZWxhXFxBdXRvIE1hcnRcXFNlcnZlciIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHN0b3JhZ2UgPSB7XG4gIHVzZXJzOiBbe1xuICAgIGlkOiAyLFxuICAgIGVtYWlsOiAnam9obmRvZUBleGFtcGxlLmNvbScsXG4gICAgZmlyc3ROYW1lOiAnSm9obicsXG4gICAgbGFzdE5hbWU6ICdEb2UnLFxuICAgIHBhc3N3b3JkOiAnUGFzc3dvcmQnLFxuICAgIGFkZHJlc3M6ICdMYWdvcycsXG4gICAgaXNBZG1pbjogZmFsc2UsXG4gIH1dLFxuICBhZHZlcnRzOiBbe1xuICAgIGlkOiAxLFxuICAgIG93bmVyOiAyLFxuICAgIGNyZWF0ZWRfb246ICcnLFxuICAgIGNvbmRpdGlvbjogJ05ldycsXG4gICAgc3RhdHVzOiAnYXZhaWxhYmxlJyxcbiAgICBwcmljZTogMTM3MDAwMDAsXG4gICAgYnJhbmQ6ICdUb3lvdGEnLFxuICAgIG1vZGVsOiAnQXZhbG9uJyxcbiAgICBib2R5X3R5cGU6ICdTZWRhbicsXG5cbiAgfSxcbiAge1xuICAgIGlkOiAyLFxuICAgIG93bmVyOiAxLFxuICAgIGNyZWF0ZWRfb246ICcnLFxuICAgIGNvbmRpdGlvbjogJ05ldycsXG4gICAgc3RhdHVzOiAnYXZhaWxhYmxlJyxcbiAgICBwcmljZTogMTM3MDAwMDAsXG4gICAgYnJhbmQ6ICdUb3lvdGEnLFxuICAgIG1vZGVsOiAnQXZhbG9uJyxcbiAgICBib2R5X3R5cGU6ICdTZWRhbicsXG5cbiAgfV0sXG4gIG9yZGVyczogW3tcbiAgICBjcmVhdGVkX29uOiAnJyxcbiAgICBpZDogNCxcbiAgICBidXllcjogMixcbiAgICBjYXJJZDogMSxcbiAgICBwcmljZTogMTM3MDAwMDAsXG4gICAgcHJpY2Vfb2ZmZXI6IDExMDAwMDAwLFxuICAgIHN0YXR1czogJ3BlbmRpbmcnLFxuICB9XSxcbiAgZmxhZ3M6IFt7XG4gICAgaWQ6IDEsXG4gICAgY2FySWQ6IDEsXG4gICAgY3JlYXRlZF9vbjogJycsXG4gICAgcmVhc29uOiAnZnJhdWR1bGVudCcsXG4gICAgZGVzY3JpcHRpb246ICdTdHJpbmcnLFxuICB9XSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHN0b3JhZ2U7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "storage.js"
      ],
      "names": [
        "storage",
        "users",
        "id",
        "email",
        "firstName",
        "lastName",
        "password",
        "address",
        "isAdmin",
        "adverts",
        "owner",
        "created_on",
        "condition",
        "status",
        "price",
        "brand",
        "model",
        "body_type",
        "orders",
        "buyer",
        "carId",
        "price_offer",
        "flags",
        "reason",
        "description"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE,CAAC;AACNC,IAAAA,EAAE,EAAE,CADE;AAENC,IAAAA,KAAK,EAAE,qBAFD;AAGNC,IAAAA,SAAS,EAAE,MAHL;AAINC,IAAAA,QAAQ,EAAE,KAJJ;AAKNC,IAAAA,QAAQ,EAAE,UALJ;AAMNC,IAAAA,OAAO,EAAE,OANH;AAONC,IAAAA,OAAO,EAAE;AAPH,GAAD,CADO;AAUdC,EAAAA,OAAO,EAAE,CAAC;AACRP,IAAAA,EAAE,EAAE,CADI;AAERQ,IAAAA,KAAK,EAAE,CAFC;AAGRC,IAAAA,UAAU,EAAE,EAHJ;AAIRC,IAAAA,SAAS,EAAE,KAJH;AAKRC,IAAAA,MAAM,EAAE,WALA;AAMRC,IAAAA,KAAK,EAAE,QANC;AAORC,IAAAA,KAAK,EAAE,QAPC;AAQRC,IAAAA,KAAK,EAAE,QARC;AASRC,IAAAA,SAAS,EAAE;AATH,GAAD,EAYT;AACEf,IAAAA,EAAE,EAAE,CADN;AAEEQ,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,UAAU,EAAE,EAHd;AAIEC,IAAAA,SAAS,EAAE,KAJb;AAKEC,IAAAA,MAAM,EAAE,WALV;AAMEC,IAAAA,KAAK,EAAE,QANT;AAOEC,IAAAA,KAAK,EAAE,QAPT;AAQEC,IAAAA,KAAK,EAAE,QART;AASEC,IAAAA,SAAS,EAAE;AATb,GAZS,CAVK;AAkCdC,EAAAA,MAAM,EAAE,CAAC;AACPP,IAAAA,UAAU,EAAE,EADL;AAEPT,IAAAA,EAAE,EAAE,CAFG;AAGPiB,IAAAA,KAAK,EAAE,CAHA;AAIPC,IAAAA,KAAK,EAAE,CAJA;AAKPN,IAAAA,KAAK,EAAE,QALA;AAMPO,IAAAA,WAAW,EAAE,QANN;AAOPR,IAAAA,MAAM,EAAE;AAPD,GAAD,CAlCM;AA2CdS,EAAAA,KAAK,EAAE,CAAC;AACNpB,IAAAA,EAAE,EAAE,CADE;AAENkB,IAAAA,KAAK,EAAE,CAFD;AAGNT,IAAAA,UAAU,EAAE,EAHN;AAINY,IAAAA,MAAM,EAAE,YAJF;AAKNC,IAAAA,WAAW,EAAE;AALP,GAAD;AA3CO,CAAhB;eAoDexB,O",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourcesContent": [
        "const storage = {\n  users: [{\n    id: 2,\n    email: 'johndoe@example.com',\n    firstName: 'John',\n    lastName: 'Doe',\n    password: 'Password',\n    address: 'Lagos',\n    isAdmin: false,\n  }],\n  adverts: [{\n    id: 1,\n    owner: 2,\n    created_on: '',\n    condition: 'New',\n    status: 'available',\n    price: 13700000,\n    brand: 'Toyota',\n    model: 'Avalon',\n    body_type: 'Sedan',\n\n  },\n  {\n    id: 2,\n    owner: 1,\n    created_on: '',\n    condition: 'New',\n    status: 'available',\n    price: 13700000,\n    brand: 'Toyota',\n    model: 'Avalon',\n    body_type: 'Sedan',\n\n  }],\n  orders: [{\n    created_on: '',\n    id: 4,\n    buyer: 2,\n    carId: 1,\n    price: 13700000,\n    price_offer: 11000000,\n    status: 'pending',\n  }],\n  flags: [{\n    id: 1,\n    carId: 1,\n    created_on: '',\n    reason: 'fraudulent',\n    description: 'String',\n  }],\n};\n\nexport default storage;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560365110853
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\Routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\Routes\\\\admin.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\Routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\Routes\\admin.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\Routes\\admin.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\Routes\\admin.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\Routes",
        "sourceFileName": "admin.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _adverts = _interopRequireDefault(require(\"../controllers/adverts\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express[\"default\"])();\nrouter.get('/advert/', _adverts[\"default\"].getAllAdverts);\nrouter[\"delete\"]('/advert/:advertId/', _adverts[\"default\"].deleteAdvert);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsImFkdmVydHMiLCJnZXRBbGxBZHZlcnRzIiwiZGVsZXRlQWR2ZXJ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsMEJBQWY7QUFFQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsVUFBWCxFQUF1QkMsb0JBQVFDLGFBQS9CO0FBQ0FILE1BQU0sVUFBTixDQUFjLG9CQUFkLEVBQW9DRSxvQkFBUUUsWUFBNUM7ZUFFZUosTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFNQUVDSElcXERvY3VtZW50c1xcQW5kZWxhXFxBdXRvIE1hcnRcXFNlcnZlclxcUm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJvdXRlciBmcm9tICdleHByZXNzJztcbmltcG9ydCBhZHZlcnRzIGZyb20gJy4uL2NvbnRyb2xsZXJzL2FkdmVydHMnO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcblxucm91dGVyLmdldCgnL2FkdmVydC8nLCBhZHZlcnRzLmdldEFsbEFkdmVydHMpO1xucm91dGVyLmRlbGV0ZSgnL2FkdmVydC86YWR2ZXJ0SWQvJywgYWR2ZXJ0cy5kZWxldGVBZHZlcnQpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "admin.js"
      ],
      "names": [
        "router",
        "get",
        "adverts",
        "getAllAdverts",
        "deleteAdvert"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,0BAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,UAAX,EAAuBC,oBAAQC,aAA/B;AACAH,MAAM,UAAN,CAAc,oBAAd,EAAoCE,oBAAQE,YAA5C;eAEeJ,M",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\Routes",
      "sourcesContent": [
        "import Router from 'express';\nimport adverts from '../controllers/adverts';\n\nconst router = Router();\n\nrouter.get('/advert/', adverts.getAllAdverts);\nrouter.delete('/advert/:advertId/', adverts.deleteAdvert);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560378528963
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\spec\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\spec\\\\run.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\run.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\run.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\run.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
        "sourceFileName": "run.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _jasmine = _interopRequireDefault(require(\"jasmine\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar jasmine = new _jasmine[\"default\"](); // modify this line to point to your jasmine.json\n\njasmine.loadConfigFile('spec/support/jasmine.json');\njasmine.execute();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ1bi5qcyJdLCJuYW1lcyI6WyJqYXNtaW5lIiwiSmFzbWluZSIsImxvYWRDb25maWdGaWxlIiwiZXhlY3V0ZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUVBLElBQU1BLE9BQU8sR0FBRyxJQUFJQyxtQkFBSixFQUFoQixDLENBQ0E7O0FBQ0FELE9BQU8sQ0FBQ0UsY0FBUixDQUF1QiwyQkFBdkI7QUFDQUYsT0FBTyxDQUFDRyxPQUFSIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQU1BRUNISVxcRG9jdW1lbnRzXFxBbmRlbGFcXEF1dG8gTWFydFxcU2VydmVyXFxzcGVjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEphc21pbmUgZnJvbSAnamFzbWluZSc7XG5cbmNvbnN0IGphc21pbmUgPSBuZXcgSmFzbWluZSgpO1xuLy8gbW9kaWZ5IHRoaXMgbGluZSB0byBwb2ludCB0byB5b3VyIGphc21pbmUuanNvblxuamFzbWluZS5sb2FkQ29uZmlnRmlsZSgnc3BlYy9zdXBwb3J0L2phc21pbmUuanNvbicpO1xuamFzbWluZS5leGVjdXRlKCk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "run.js"
      ],
      "names": [
        "jasmine",
        "Jasmine",
        "loadConfigFile",
        "execute"
      ],
      "mappings": ";;AAAA;;;;AAEA,IAAMA,OAAO,GAAG,IAAIC,mBAAJ,EAAhB,C,CACA;;AACAD,OAAO,CAACE,cAAR,CAAuB,2BAAvB;AACAF,OAAO,CAACG,OAAR",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
      "sourcesContent": [
        "import Jasmine from 'jasmine';\n\nconst jasmine = new Jasmine();\n// modify this line to point to your jasmine.json\njasmine.loadConfigFile('spec/support/jasmine.json');\njasmine.execute();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560197347952
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\spec\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\spec\\\\test.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\test.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\test.spec.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\test.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
        "sourceFileName": "test.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _request = _interopRequireDefault(require(\"request\"));\n\nvar _server = _interopRequireDefault(require(\"../src/server\"));\n\nvar _storage = _interopRequireDefault(require(\"../storage\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* eslint-env jasmine */\nvar start = function start() {\n  return _server[\"default\"];\n};\n\nstart();\ndescribe('get nonexistent advert', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/adverts/003',\n    headers: {\n      sender: 'user'\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"].get(options, function (error, response, body) {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 404', function () {\n    expect(data.status).toBe(404);\n  });\n});\ndescribe('get all adverts', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/adverts',\n    headers: {\n      sender: 'admin'\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"].get(options, function (error, response, body) {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 200', function () {\n    expect(data.status).toBe(200);\n  });\n  it('array of all adverts', function () {\n    expect(JSON.parse(data.body)).toEqual(_storage[\"default\"].adverts);\n  });\n});\ndescribe('creating a new advert', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/adverts',\n    json: true,\n    method: 'post',\n    headers: {\n      sender: 'user'\n    },\n    body: {\n      id: 2,\n      owner: 1,\n      created_on: '21-05-2019',\n      condition: 'New',\n      status: 'In stock',\n      price: 18000000,\n      manufacturer: 'Honda',\n      model: 'CR-V',\n      body_type: 'SUV'\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"].post(options, function (error, response) {\n      data.status = response.statusCode;\n      done();\n    });\n  });\n  it('status 200', function () {\n    expect(data.status).toBe(200);\n  });\n  describe('check if advert was created', function () {\n    var data2 = {};\n    var options2 = {\n      url: 'http://localhost:3000/api/v1/adverts/2',\n      headers: {\n        sender: 'user'\n      }\n    };\n    beforeAll(function (done) {\n      _request[\"default\"].get(options2, function (error, response, body) {\n        data2.status = response.statusCode;\n        data2.body = body;\n        done();\n      });\n    });\n    it('status 200', function () {\n      expect(data2.status).toBe(200);\n    });\n    it('advert object', function () {\n      expect(JSON.parse(data2.body)).toEqual({\n        id: 2,\n        owner: 1,\n        created_on: '21-05-2019',\n        condition: 'New',\n        status: 'In stock',\n        price: 18000000,\n        manufacturer: 'Honda',\n        model: 'CR-V',\n        body_type: 'SUV'\n      });\n    });\n  });\n});\n/* describe('canceling an order', () => {\n    const data = {};\n    const options = {\n      url: 'http://localhost:3000/api/v1/users/orders/cancel/od-0002',\n      headers: {\n        sender: 'user',\n      },\n    };\n    beforeAll((done) => {\n      Request.put(options, (error, response) => {\n        data.status = response.statusCode;\n        done();\n      });\n    });\n    it('status 200', () => {\n      expect(data.status).toBe(200);\n    });\n    describe('check if order was canceled', () => {\n      const data2 = {};\n      const options2 = {\n        url: 'http://localhost:3000/users/orders/od-0002',\n        headers: {\n          sender: 'user',\n        },\n      };\n      beforeAll((done) => {\n        Request.get(options2, (error, response, body) => {\n          data2.status = response.statusCode;\n          data2.body = body;\n          done();\n        });\n      });\n      it('status 200', () => {\n        expect(data2.status).toBe(200);\n      });\n      it('order status should be canceled', () => {\n        expect(JSON.parse(data2.body).status).toBe('canceled');\n      });\n    });\n  }); */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "test.spec.js"
      ],
      "names": [
        "start",
        "Server",
        "describe",
        "data",
        "options",
        "url",
        "headers",
        "sender",
        "beforeAll",
        "done",
        "Request",
        "get",
        "error",
        "response",
        "body",
        "status",
        "statusCode",
        "it",
        "expect",
        "toBe",
        "JSON",
        "parse",
        "toEqual",
        "storage",
        "adverts",
        "json",
        "method",
        "id",
        "owner",
        "created_on",
        "condition",
        "price",
        "manufacturer",
        "model",
        "body_type",
        "post",
        "data2",
        "options2"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;;;AAHA;AAKA,IAAMA,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAMC,kBAAN;AAAA,CAAd;;AACAD,KAAK;AAELE,QAAQ,CAAC,wBAAD,EAA2B,YAAM;AACvC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,0CADS;AAEdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAFK,GAAhB;AAMAC,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,wBAAQC,GAAR,CAAYP,OAAZ,EAAqB,UAACQ,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC9CX,MAAAA,IAAI,CAACY,MAAL,GAAcF,QAAQ,CAACG,UAAvB;AACAb,MAAAA,IAAI,CAACW,IAAL,GAAYA,IAAZ;AACAL,MAAAA,IAAI;AACL,KAJD;AAKD,GANQ,CAAT;AAOAQ,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACf,IAAI,CAACY,MAAN,CAAN,CAAoBI,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGD,CAlBO,CAAR;AAoBAjB,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAChC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,sCADS;AAEdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAFK,GAAhB;AAMAC,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,wBAAQC,GAAR,CAAYP,OAAZ,EAAqB,UAACQ,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC9CX,MAAAA,IAAI,CAACY,MAAL,GAAcF,QAAQ,CAACG,UAAvB;AACAb,MAAAA,IAAI,CAACW,IAAL,GAAYA,IAAZ;AACAL,MAAAA,IAAI;AACL,KAJD;AAKD,GANQ,CAAT;AAOAQ,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACf,IAAI,CAACY,MAAN,CAAN,CAAoBI,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,sBAAD,EAAyB,YAAM;AAC/BC,IAAAA,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWlB,IAAI,CAACW,IAAhB,CAAD,CAAN,CAA8BQ,OAA9B,CAAsCC,oBAAQC,OAA9C;AACD,GAFC,CAAF;AAGD,CArBO,CAAR;AAuBAtB,QAAQ,CAAC,uBAAD,EAA0B,YAAM;AACtC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,sCADS;AAEdoB,IAAAA,IAAI,EAAE,IAFQ;AAGdC,IAAAA,MAAM,EAAE,MAHM;AAIdpB,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD,KAJK;AAOdO,IAAAA,IAAI,EAAE;AACJa,MAAAA,EAAE,EAAE,CADA;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,UAAU,EAAE,YAHR;AAIJC,MAAAA,SAAS,EAAE,KAJP;AAKJf,MAAAA,MAAM,EAAE,UALJ;AAMJgB,MAAAA,KAAK,EAAE,QANH;AAOJC,MAAAA,YAAY,EAAE,OAPV;AAQJC,MAAAA,KAAK,EAAE,MARH;AASJC,MAAAA,SAAS,EAAE;AATP;AAPQ,GAAhB;AAmBA1B,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,wBAAQyB,IAAR,CAAa/B,OAAb,EAAsB,UAACQ,KAAD,EAAQC,QAAR,EAAqB;AACzCV,MAAAA,IAAI,CAACY,MAAL,GAAcF,QAAQ,CAACG,UAAvB;AACAP,MAAAA,IAAI;AACL,KAHD;AAID,GALQ,CAAT;AAMAQ,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACf,IAAI,CAACY,MAAN,CAAN,CAAoBI,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGAjB,EAAAA,QAAQ,CAAC,6BAAD,EAAgC,YAAM;AAC5C,QAAMkC,KAAK,GAAG,EAAd;AACA,QAAMC,QAAQ,GAAG;AACfhC,MAAAA,GAAG,EAAE,wCADU;AAEfC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAFM,KAAjB;AAMAC,IAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,0BAAQC,GAAR,CAAY0B,QAAZ,EAAsB,UAACzB,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC/CsB,QAAAA,KAAK,CAACrB,MAAN,GAAeF,QAAQ,CAACG,UAAxB;AACAoB,QAAAA,KAAK,CAACtB,IAAN,GAAaA,IAAb;AACAL,QAAAA,IAAI;AACL,OAJD;AAKD,KANQ,CAAT;AAOAQ,IAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,MAAAA,MAAM,CAACkB,KAAK,CAACrB,MAAP,CAAN,CAAqBI,IAArB,CAA0B,GAA1B;AACD,KAFC,CAAF;AAGAF,IAAAA,EAAE,CAAC,eAAD,EAAkB,YAAM;AACxBC,MAAAA,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWe,KAAK,CAACtB,IAAjB,CAAD,CAAN,CAA+BQ,OAA/B,CAAuC;AACrCK,QAAAA,EAAE,EAAE,CADiC;AAErCC,QAAAA,KAAK,EAAE,CAF8B;AAGrCC,QAAAA,UAAU,EAAE,YAHyB;AAIrCC,QAAAA,SAAS,EAAE,KAJ0B;AAKrCf,QAAAA,MAAM,EAAE,UAL6B;AAMrCgB,QAAAA,KAAK,EAAE,QAN8B;AAOrCC,QAAAA,YAAY,EAAE,OAPuB;AAQrCC,QAAAA,KAAK,EAAE,MAR8B;AASrCC,QAAAA,SAAS,EAAE;AAT0B,OAAvC;AAWD,KAZC,CAAF;AAaD,GA/BO,CAAR;AAgCD,CA9DO,CAAR;AAgEA",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
      "sourcesContent": [
        "/* eslint-env jasmine */\nimport Request from 'request';\nimport Server from '../src/server';\nimport storage from '../storage';\n\nconst start = () => Server;\nstart();\n\ndescribe('get nonexistent advert', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/adverts/003',\n    headers: {\n      sender: 'user',\n    },\n  };\n  beforeAll((done) => {\n    Request.get(options, (error, response, body) => {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 404', () => {\n    expect(data.status).toBe(404);\n  });\n});\n\ndescribe('get all adverts', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/adverts',\n    headers: {\n      sender: 'admin',\n    },\n  };\n  beforeAll((done) => {\n    Request.get(options, (error, response, body) => {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 200', () => {\n    expect(data.status).toBe(200);\n  });\n  it('array of all adverts', () => {\n    expect(JSON.parse(data.body)).toEqual(storage.adverts);\n  });\n});\n\ndescribe('creating a new advert', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/adverts',\n    json: true,\n    method: 'post',\n    headers: {\n      sender: 'user',\n    },\n    body: {\n      id: 2,\n      owner: 1,\n      created_on: '21-05-2019',\n      condition: 'New',\n      status: 'In stock',\n      price: 18000000,\n      manufacturer: 'Honda',\n      model: 'CR-V',\n      body_type: 'SUV',\n    },\n  };\n  beforeAll((done) => {\n    Request.post(options, (error, response) => {\n      data.status = response.statusCode;\n      done();\n    });\n  });\n  it('status 200', () => {\n    expect(data.status).toBe(200);\n  });\n  describe('check if advert was created', () => {\n    const data2 = {};\n    const options2 = {\n      url: 'http://localhost:3000/api/v1/adverts/2',\n      headers: {\n        sender: 'user',\n      },\n    };\n    beforeAll((done) => {\n      Request.get(options2, (error, response, body) => {\n        data2.status = response.statusCode;\n        data2.body = body;\n        done();\n      });\n    });\n    it('status 200', () => {\n      expect(data2.status).toBe(200);\n    });\n    it('advert object', () => {\n      expect(JSON.parse(data2.body)).toEqual({\n        id: 2,\n        owner: 1,\n        created_on: '21-05-2019',\n        condition: 'New',\n        status: 'In stock',\n        price: 18000000,\n        manufacturer: 'Honda',\n        model: 'CR-V',\n        body_type: 'SUV',\n      });\n    });\n  });\n});\n\n/* describe('canceling an order', () => {\n    const data = {};\n    const options = {\n      url: 'http://localhost:3000/api/v1/users/orders/cancel/od-0002',\n      headers: {\n        sender: 'user',\n      },\n    };\n    beforeAll((done) => {\n      Request.put(options, (error, response) => {\n        data.status = response.statusCode;\n        done();\n      });\n    });\n    it('status 200', () => {\n      expect(data.status).toBe(200);\n    });\n    describe('check if order was canceled', () => {\n      const data2 = {};\n      const options2 = {\n        url: 'http://localhost:3000/users/orders/od-0002',\n        headers: {\n          sender: 'user',\n        },\n      };\n      beforeAll((done) => {\n        Request.get(options2, (error, response, body) => {\n          data2.status = response.statusCode;\n          data2.body = body;\n          done();\n        });\n      });\n      it('status 200', () => {\n        expect(data2.status).toBe(200);\n      });\n      it('order status should be canceled', () => {\n        expect(JSON.parse(data2.body).status).toBe('canceled');\n      });\n    });\n  }); */\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560272861193
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\spec\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\spec\\\\test2.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\test2.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\test2.spec.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\test2.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
        "sourceFileName": "test2.spec.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env jasmine */\n\n/* import Request from 'request';\nimport Server from '../src/server';\nimport storage from '../storage';\n\nconst start = () => Server;\nstart(); */\n\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QyLnNwZWMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBTUFFQ0hJXFxEb2N1bWVudHNcXEFuZGVsYVxcQXV0byBNYXJ0XFxTZXJ2ZXJcXHNwZWMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZW52IGphc21pbmUgKi9cbi8qIGltcG9ydCBSZXF1ZXN0IGZyb20gJ3JlcXVlc3QnO1xuaW1wb3J0IFNlcnZlciBmcm9tICcuLi9zcmMvc2VydmVyJztcbmltcG9ydCBzdG9yYWdlIGZyb20gJy4uL3N0b3JhZ2UnO1xuXG5jb25zdCBzdGFydCA9ICgpID0+IFNlcnZlcjtcbnN0YXJ0KCk7ICovXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "test2.spec.js"
      ],
      "names": [],
      "mappings": "AAAA;;AACA",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
      "sourcesContent": [
        "/* eslint-env jasmine */\n/* import Request from 'request';\nimport Server from '../src/server';\nimport storage from '../storage';\n\nconst start = () => Server;\nstart(); */\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560400365299
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\controllers\\\\members.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers\\members.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers\\members.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers\\members.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers",
        "sourceFileName": "members.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _storage = _interopRequireDefault(require(\"../storage\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Error = function Error(status, message) {\n  _classCallCheck(this, Error);\n\n  this.status = status;\n  this.message = message;\n};\n\nvar members = {\n  createUserAccount: function createUserAccount(req, res) {\n    var Res = {\n      status: 201,\n      data: {\n        token: '45erkjherht45495783'\n      }\n    };\n\n    var user = _storage[\"default\"].users.find(function (User) {\n      return User.email === req.body.email;\n    });\n\n    if (user) {\n      Res.status = 409;\n      Res.data = new Error(409, 'User already exists');\n    } else {\n      _storage[\"default\"].users.push(req.body);\n\n      Res.data = Object.assign(Res.data, req.body);\n    }\n\n    res.status(Res.status).json(Res.data);\n  },\n  logInUser: function logInUser(req, res) {\n    var Res = {\n      status: 200,\n      data: {\n        token: '45erkjherht45495783'\n      }\n    };\n\n    var user = _storage[\"default\"].users.find(function (UseR) {\n      return UseR.email === req.body.email;\n    });\n\n    if (user) {\n      if (user.password === req.body.password) Res.data = Object.assign(Res.data, user);else {\n        Res.status = 401;\n        Res.data = new Error(401, 'email and password do not match');\n      }\n    } else {\n      Res.status = 401;\n      Res.data = new Error(401, 'User does not exist');\n    }\n\n    res.status(Res.status).json(Res.data);\n  }\n};\nvar _default = members;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbWJlcnMuanMiXSwibmFtZXMiOlsiRXJyb3IiLCJzdGF0dXMiLCJtZXNzYWdlIiwibWVtYmVycyIsImNyZWF0ZVVzZXJBY2NvdW50IiwicmVxIiwicmVzIiwiUmVzIiwiZGF0YSIsInRva2VuIiwidXNlciIsInN0b3JhZ2UiLCJ1c2VycyIsImZpbmQiLCJVc2VyIiwiZW1haWwiLCJib2R5IiwicHVzaCIsIk9iamVjdCIsImFzc2lnbiIsImpzb24iLCJsb2dJblVzZXIiLCJVc2VSIiwicGFzc3dvcmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0lBRU1BLEssR0FDSixlQUFZQyxNQUFaLEVBQW9CQyxPQUFwQixFQUE2QjtBQUFBOztBQUMzQixPQUFLRCxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxPQUFLQyxPQUFMLEdBQWVBLE9BQWY7QUFDRCxDOztBQUdILElBQU1DLE9BQU8sR0FBRztBQUNkQyxFQUFBQSxpQkFBaUIsRUFBRSwyQkFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDL0IsUUFBTUMsR0FBRyxHQUFHO0FBQ1ZOLE1BQUFBLE1BQU0sRUFBRSxHQURFO0FBRVZPLE1BQUFBLElBQUksRUFBRTtBQUNKQyxRQUFBQSxLQUFLLEVBQUU7QUFESDtBQUZJLEtBQVo7O0FBTUEsUUFBTUMsSUFBSSxHQUFHQyxvQkFBUUMsS0FBUixDQUFjQyxJQUFkLENBQW1CLFVBQUFDLElBQUk7QUFBQSxhQUFJQSxJQUFJLENBQUNDLEtBQUwsS0FBZVYsR0FBRyxDQUFDVyxJQUFKLENBQVNELEtBQTVCO0FBQUEsS0FBdkIsQ0FBYjs7QUFDQSxRQUFJTCxJQUFKLEVBQVU7QUFDUkgsTUFBQUEsR0FBRyxDQUFDTixNQUFKLEdBQWEsR0FBYjtBQUNBTSxNQUFBQSxHQUFHLENBQUNDLElBQUosR0FBVyxJQUFJUixLQUFKLENBQVUsR0FBVixFQUFlLHFCQUFmLENBQVg7QUFDRCxLQUhELE1BR087QUFDTFcsMEJBQVFDLEtBQVIsQ0FBY0ssSUFBZCxDQUFtQlosR0FBRyxDQUFDVyxJQUF2Qjs7QUFDQVQsTUFBQUEsR0FBRyxDQUFDQyxJQUFKLEdBQVdVLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjWixHQUFHLENBQUNDLElBQWxCLEVBQXdCSCxHQUFHLENBQUNXLElBQTVCLENBQVg7QUFDRDs7QUFDRFYsSUFBQUEsR0FBRyxDQUFDTCxNQUFKLENBQVdNLEdBQUcsQ0FBQ04sTUFBZixFQUF1Qm1CLElBQXZCLENBQTRCYixHQUFHLENBQUNDLElBQWhDO0FBQ0QsR0FqQmE7QUFrQmRhLEVBQUFBLFNBQVMsRUFBRSxtQkFBQ2hCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3ZCLFFBQU1DLEdBQUcsR0FBRztBQUNWTixNQUFBQSxNQUFNLEVBQUUsR0FERTtBQUVWTyxNQUFBQSxJQUFJLEVBQUU7QUFDSkMsUUFBQUEsS0FBSyxFQUFFO0FBREg7QUFGSSxLQUFaOztBQU1BLFFBQU1DLElBQUksR0FBR0Msb0JBQVFDLEtBQVIsQ0FBY0MsSUFBZCxDQUFtQixVQUFBUyxJQUFJO0FBQUEsYUFBSUEsSUFBSSxDQUFDUCxLQUFMLEtBQWVWLEdBQUcsQ0FBQ1csSUFBSixDQUFTRCxLQUE1QjtBQUFBLEtBQXZCLENBQWI7O0FBQ0EsUUFBSUwsSUFBSixFQUFVO0FBQ1IsVUFBSUEsSUFBSSxDQUFDYSxRQUFMLEtBQWtCbEIsR0FBRyxDQUFDVyxJQUFKLENBQVNPLFFBQS9CLEVBQXlDaEIsR0FBRyxDQUFDQyxJQUFKLEdBQVdVLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjWixHQUFHLENBQUNDLElBQWxCLEVBQXdCRSxJQUF4QixDQUFYLENBQXpDLEtBQ0s7QUFDSEgsUUFBQUEsR0FBRyxDQUFDTixNQUFKLEdBQWEsR0FBYjtBQUNBTSxRQUFBQSxHQUFHLENBQUNDLElBQUosR0FBVyxJQUFJUixLQUFKLENBQVUsR0FBVixFQUFlLGlDQUFmLENBQVg7QUFDRDtBQUNGLEtBTkQsTUFNTztBQUNMTyxNQUFBQSxHQUFHLENBQUNOLE1BQUosR0FBYSxHQUFiO0FBQ0FNLE1BQUFBLEdBQUcsQ0FBQ0MsSUFBSixHQUFXLElBQUlSLEtBQUosQ0FBVSxHQUFWLEVBQWUscUJBQWYsQ0FBWDtBQUNEOztBQUNETSxJQUFBQSxHQUFHLENBQUNMLE1BQUosQ0FBV00sR0FBRyxDQUFDTixNQUFmLEVBQXVCbUIsSUFBdkIsQ0FBNEJiLEdBQUcsQ0FBQ0MsSUFBaEM7QUFDRDtBQXJDYSxDQUFoQjtlQXdDZUwsTyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFNQUVDSElcXERvY3VtZW50c1xcQW5kZWxhXFxBdXRvIE1hcnRcXFNlcnZlclxcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3RvcmFnZSBmcm9tICcuLi9zdG9yYWdlJztcblxuY2xhc3MgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihzdGF0dXMsIG1lc3NhZ2UpIHtcbiAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICB9XG59XG5cbmNvbnN0IG1lbWJlcnMgPSB7XG4gIGNyZWF0ZVVzZXJBY2NvdW50OiAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCBSZXMgPSB7XG4gICAgICBzdGF0dXM6IDIwMSxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgdG9rZW46ICc0NWVya2poZXJodDQ1NDk1NzgzJyxcbiAgICAgIH0sXG4gICAgfTtcbiAgICBjb25zdCB1c2VyID0gc3RvcmFnZS51c2Vycy5maW5kKFVzZXIgPT4gVXNlci5lbWFpbCA9PT0gcmVxLmJvZHkuZW1haWwpO1xuICAgIGlmICh1c2VyKSB7XG4gICAgICBSZXMuc3RhdHVzID0gNDA5O1xuICAgICAgUmVzLmRhdGEgPSBuZXcgRXJyb3IoNDA5LCAnVXNlciBhbHJlYWR5IGV4aXN0cycpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdG9yYWdlLnVzZXJzLnB1c2gocmVxLmJvZHkpO1xuICAgICAgUmVzLmRhdGEgPSBPYmplY3QuYXNzaWduKFJlcy5kYXRhLCByZXEuYm9keSk7XG4gICAgfVxuICAgIHJlcy5zdGF0dXMoUmVzLnN0YXR1cykuanNvbihSZXMuZGF0YSk7XG4gIH0sXG4gIGxvZ0luVXNlcjogKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgUmVzID0ge1xuICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIHRva2VuOiAnNDVlcmtqaGVyaHQ0NTQ5NTc4MycsXG4gICAgICB9LFxuICAgIH07XG4gICAgY29uc3QgdXNlciA9IHN0b3JhZ2UudXNlcnMuZmluZChVc2VSID0+IFVzZVIuZW1haWwgPT09IHJlcS5ib2R5LmVtYWlsKTtcbiAgICBpZiAodXNlcikge1xuICAgICAgaWYgKHVzZXIucGFzc3dvcmQgPT09IHJlcS5ib2R5LnBhc3N3b3JkKSBSZXMuZGF0YSA9IE9iamVjdC5hc3NpZ24oUmVzLmRhdGEsIHVzZXIpO1xuICAgICAgZWxzZSB7XG4gICAgICAgIFJlcy5zdGF0dXMgPSA0MDE7XG4gICAgICAgIFJlcy5kYXRhID0gbmV3IEVycm9yKDQwMSwgJ2VtYWlsIGFuZCBwYXNzd29yZCBkbyBub3QgbWF0Y2gnKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgUmVzLnN0YXR1cyA9IDQwMTtcbiAgICAgIFJlcy5kYXRhID0gbmV3IEVycm9yKDQwMSwgJ1VzZXIgZG9lcyBub3QgZXhpc3QnKTtcbiAgICB9XG4gICAgcmVzLnN0YXR1cyhSZXMuc3RhdHVzKS5qc29uKFJlcy5kYXRhKTtcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1lbWJlcnM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "members.js"
      ],
      "names": [
        "Error",
        "status",
        "message",
        "members",
        "createUserAccount",
        "req",
        "res",
        "Res",
        "data",
        "token",
        "user",
        "storage",
        "users",
        "find",
        "User",
        "email",
        "body",
        "push",
        "Object",
        "assign",
        "json",
        "logInUser",
        "UseR",
        "password"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;IAEMA,K,GACJ,eAAYC,MAAZ,EAAoBC,OAApB,EAA6B;AAAA;;AAC3B,OAAKD,MAAL,GAAcA,MAAd;AACA,OAAKC,OAAL,GAAeA,OAAf;AACD,C;;AAGH,IAAMC,OAAO,GAAG;AACdC,EAAAA,iBAAiB,EAAE,2BAACC,GAAD,EAAMC,GAAN,EAAc;AAC/B,QAAMC,GAAG,GAAG;AACVN,MAAAA,MAAM,EAAE,GADE;AAEVO,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE;AADH;AAFI,KAAZ;;AAMA,QAAMC,IAAI,GAAGC,oBAAQC,KAAR,CAAcC,IAAd,CAAmB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,KAAL,KAAeV,GAAG,CAACW,IAAJ,CAASD,KAA5B;AAAA,KAAvB,CAAb;;AACA,QAAIL,IAAJ,EAAU;AACRH,MAAAA,GAAG,CAACN,MAAJ,GAAa,GAAb;AACAM,MAAAA,GAAG,CAACC,IAAJ,GAAW,IAAIR,KAAJ,CAAU,GAAV,EAAe,qBAAf,CAAX;AACD,KAHD,MAGO;AACLW,0BAAQC,KAAR,CAAcK,IAAd,CAAmBZ,GAAG,CAACW,IAAvB;;AACAT,MAAAA,GAAG,CAACC,IAAJ,GAAWU,MAAM,CAACC,MAAP,CAAcZ,GAAG,CAACC,IAAlB,EAAwBH,GAAG,CAACW,IAA5B,CAAX;AACD;;AACDV,IAAAA,GAAG,CAACL,MAAJ,CAAWM,GAAG,CAACN,MAAf,EAAuBmB,IAAvB,CAA4Bb,GAAG,CAACC,IAAhC;AACD,GAjBa;AAkBda,EAAAA,SAAS,EAAE,mBAAChB,GAAD,EAAMC,GAAN,EAAc;AACvB,QAAMC,GAAG,GAAG;AACVN,MAAAA,MAAM,EAAE,GADE;AAEVO,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE;AADH;AAFI,KAAZ;;AAMA,QAAMC,IAAI,GAAGC,oBAAQC,KAAR,CAAcC,IAAd,CAAmB,UAAAS,IAAI;AAAA,aAAIA,IAAI,CAACP,KAAL,KAAeV,GAAG,CAACW,IAAJ,CAASD,KAA5B;AAAA,KAAvB,CAAb;;AACA,QAAIL,IAAJ,EAAU;AACR,UAAIA,IAAI,CAACa,QAAL,KAAkBlB,GAAG,CAACW,IAAJ,CAASO,QAA/B,EAAyChB,GAAG,CAACC,IAAJ,GAAWU,MAAM,CAACC,MAAP,CAAcZ,GAAG,CAACC,IAAlB,EAAwBE,IAAxB,CAAX,CAAzC,KACK;AACHH,QAAAA,GAAG,CAACN,MAAJ,GAAa,GAAb;AACAM,QAAAA,GAAG,CAACC,IAAJ,GAAW,IAAIR,KAAJ,CAAU,GAAV,EAAe,iCAAf,CAAX;AACD;AACF,KAND,MAMO;AACLO,MAAAA,GAAG,CAACN,MAAJ,GAAa,GAAb;AACAM,MAAAA,GAAG,CAACC,IAAJ,GAAW,IAAIR,KAAJ,CAAU,GAAV,EAAe,qBAAf,CAAX;AACD;;AACDM,IAAAA,GAAG,CAACL,MAAJ,CAAWM,GAAG,CAACN,MAAf,EAAuBmB,IAAvB,CAA4Bb,GAAG,CAACC,IAAhC;AACD;AArCa,CAAhB;eAwCeL,O",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers",
      "sourcesContent": [
        "import storage from '../storage';\n\nclass Error {\n  constructor(status, message) {\n    this.status = status;\n    this.message = message;\n  }\n}\n\nconst members = {\n  createUserAccount: (req, res) => {\n    const Res = {\n      status: 201,\n      data: {\n        token: '45erkjherht45495783',\n      },\n    };\n    const user = storage.users.find(User => User.email === req.body.email);\n    if (user) {\n      Res.status = 409;\n      Res.data = new Error(409, 'User already exists');\n    } else {\n      storage.users.push(req.body);\n      Res.data = Object.assign(Res.data, req.body);\n    }\n    res.status(Res.status).json(Res.data);\n  },\n  logInUser: (req, res) => {\n    const Res = {\n      status: 200,\n      data: {\n        token: '45erkjherht45495783',\n      },\n    };\n    const user = storage.users.find(UseR => UseR.email === req.body.email);\n    if (user) {\n      if (user.password === req.body.password) Res.data = Object.assign(Res.data, user);\n      else {\n        Res.status = 401;\n        Res.data = new Error(401, 'email and password do not match');\n      }\n    } else {\n      Res.status = 401;\n      Res.data = new Error(401, 'User does not exist');\n    }\n    res.status(Res.status).json(Res.data);\n  },\n};\n\nexport default members;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560356580958
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\controllers\\\\orders.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers\\orders.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers\\orders.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers\\orders.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers",
        "sourceFileName": "orders.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _storage = _interopRequireDefault(require(\"../storage\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Error = function Error(status, message) {\n  _classCallCheck(this, Error);\n\n  this.status = status;\n  this.message = message;\n};\n\nvar orders = {\n  createNewOrder: function createNewOrder(req, res) {\n    var Res = {\n      status: 201,\n      data: Object.assign({\n        created_on: new Date()\n      }, req.body)\n    };\n\n    _storage[\"default\"].orders.push(Res.data);\n\n    res.status(Res.status).json(Res.data);\n  },\n  updateOrderPrice: function updateOrderPrice(req, res) {\n    var Res = {\n      status: 200,\n      data: {\n        last_modified: new Date()\n      }\n    };\n\n    var order = _storage[\"default\"].orders.find(function (Order) {\n      return Order.id === parseInt(req.params.orderId, 10);\n    });\n\n    if (order) {\n      if (order.status === 'pending') {\n        order.old_Price_offer = order.price_offer;\n        order.new_Price_offer = req.body.price_offer;\n        delete order.price_offer;\n        Object.assign(Res.data, order);\n      } else {\n        Res.status = 405;\n        Res.data = new Error(405, 'This order cannot be changed');\n      }\n    } else {\n      Res.status = 404;\n      Res.data = new Error(404, 'not found');\n    }\n\n    res.status(Res.status).json(Res.data);\n  }\n};\nvar _default = orders;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVycy5qcyJdLCJuYW1lcyI6WyJFcnJvciIsInN0YXR1cyIsIm1lc3NhZ2UiLCJvcmRlcnMiLCJjcmVhdGVOZXdPcmRlciIsInJlcSIsInJlcyIsIlJlcyIsImRhdGEiLCJPYmplY3QiLCJhc3NpZ24iLCJjcmVhdGVkX29uIiwiRGF0ZSIsImJvZHkiLCJzdG9yYWdlIiwicHVzaCIsImpzb24iLCJ1cGRhdGVPcmRlclByaWNlIiwibGFzdF9tb2RpZmllZCIsIm9yZGVyIiwiZmluZCIsIk9yZGVyIiwiaWQiLCJwYXJzZUludCIsInBhcmFtcyIsIm9yZGVySWQiLCJvbGRfUHJpY2Vfb2ZmZXIiLCJwcmljZV9vZmZlciIsIm5ld19QcmljZV9vZmZlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7SUFFTUEsSyxHQUNKLGVBQVlDLE1BQVosRUFBb0JDLE9BQXBCLEVBQTZCO0FBQUE7O0FBQzNCLE9BQUtELE1BQUwsR0FBY0EsTUFBZDtBQUNBLE9BQUtDLE9BQUwsR0FBZUEsT0FBZjtBQUNELEM7O0FBR0gsSUFBTUMsTUFBTSxHQUFHO0FBQ2JDLEVBQUFBLGNBQWMsRUFBRSx3QkFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDNUIsUUFBTUMsR0FBRyxHQUFHO0FBQ1ZOLE1BQUFBLE1BQU0sRUFBRSxHQURFO0FBRVZPLE1BQUFBLElBQUksRUFBRUMsTUFBTSxDQUFDQyxNQUFQLENBQWM7QUFBRUMsUUFBQUEsVUFBVSxFQUFFLElBQUlDLElBQUo7QUFBZCxPQUFkLEVBQTBDUCxHQUFHLENBQUNRLElBQTlDO0FBRkksS0FBWjs7QUFJQUMsd0JBQVFYLE1BQVIsQ0FBZVksSUFBZixDQUFvQlIsR0FBRyxDQUFDQyxJQUF4Qjs7QUFDQUYsSUFBQUEsR0FBRyxDQUFDTCxNQUFKLENBQVdNLEdBQUcsQ0FBQ04sTUFBZixFQUF1QmUsSUFBdkIsQ0FBNEJULEdBQUcsQ0FBQ0MsSUFBaEM7QUFDRCxHQVJZO0FBU2JTLEVBQUFBLGdCQUFnQixFQUFFLDBCQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM5QixRQUFNQyxHQUFHLEdBQUc7QUFDVk4sTUFBQUEsTUFBTSxFQUFFLEdBREU7QUFFVk8sTUFBQUEsSUFBSSxFQUFFO0FBQUVVLFFBQUFBLGFBQWEsRUFBRSxJQUFJTixJQUFKO0FBQWpCO0FBRkksS0FBWjs7QUFJQSxRQUFNTyxLQUFLLEdBQUdMLG9CQUFRWCxNQUFSLENBQWVpQixJQUFmLENBQW9CLFVBQUFDLEtBQUs7QUFBQSxhQUFJQSxLQUFLLENBQUNDLEVBQU4sS0FBYUMsUUFBUSxDQUFDbEIsR0FBRyxDQUFDbUIsTUFBSixDQUFXQyxPQUFaLEVBQXFCLEVBQXJCLENBQXpCO0FBQUEsS0FBekIsQ0FBZDs7QUFDQSxRQUFJTixLQUFKLEVBQVc7QUFDVCxVQUFJQSxLQUFLLENBQUNsQixNQUFOLEtBQWlCLFNBQXJCLEVBQWdDO0FBQzlCa0IsUUFBQUEsS0FBSyxDQUFDTyxlQUFOLEdBQXdCUCxLQUFLLENBQUNRLFdBQTlCO0FBQ0FSLFFBQUFBLEtBQUssQ0FBQ1MsZUFBTixHQUF3QnZCLEdBQUcsQ0FBQ1EsSUFBSixDQUFTYyxXQUFqQztBQUNBLGVBQU9SLEtBQUssQ0FBQ1EsV0FBYjtBQUNBbEIsUUFBQUEsTUFBTSxDQUFDQyxNQUFQLENBQWNILEdBQUcsQ0FBQ0MsSUFBbEIsRUFBd0JXLEtBQXhCO0FBQ0QsT0FMRCxNQUtPO0FBQ0xaLFFBQUFBLEdBQUcsQ0FBQ04sTUFBSixHQUFhLEdBQWI7QUFDQU0sUUFBQUEsR0FBRyxDQUFDQyxJQUFKLEdBQVcsSUFBSVIsS0FBSixDQUFVLEdBQVYsRUFBZSw4QkFBZixDQUFYO0FBQ0Q7QUFDRixLQVZELE1BVU87QUFDTE8sTUFBQUEsR0FBRyxDQUFDTixNQUFKLEdBQWEsR0FBYjtBQUNBTSxNQUFBQSxHQUFHLENBQUNDLElBQUosR0FBVyxJQUFJUixLQUFKLENBQVUsR0FBVixFQUFlLFdBQWYsQ0FBWDtBQUNEOztBQUNETSxJQUFBQSxHQUFHLENBQUNMLE1BQUosQ0FBV00sR0FBRyxDQUFDTixNQUFmLEVBQXVCZSxJQUF2QixDQUE0QlQsR0FBRyxDQUFDQyxJQUFoQztBQUNEO0FBOUJZLENBQWY7ZUFrQ2VMLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBTUFFQ0hJXFxEb2N1bWVudHNcXEFuZGVsYVxcQXV0byBNYXJ0XFxTZXJ2ZXJcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0b3JhZ2UgZnJvbSAnLi4vc3RvcmFnZSc7XG5cbmNsYXNzIEVycm9yIHtcbiAgY29uc3RydWN0b3Ioc3RhdHVzLCBtZXNzYWdlKSB7XG4gICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgfVxufVxuXG5jb25zdCBvcmRlcnMgPSB7XG4gIGNyZWF0ZU5ld09yZGVyOiAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCBSZXMgPSB7XG4gICAgICBzdGF0dXM6IDIwMSxcbiAgICAgIGRhdGE6IE9iamVjdC5hc3NpZ24oeyBjcmVhdGVkX29uOiBuZXcgRGF0ZSgpIH0sIHJlcS5ib2R5KSxcbiAgICB9O1xuICAgIHN0b3JhZ2Uub3JkZXJzLnB1c2goUmVzLmRhdGEpO1xuICAgIHJlcy5zdGF0dXMoUmVzLnN0YXR1cykuanNvbihSZXMuZGF0YSk7XG4gIH0sXG4gIHVwZGF0ZU9yZGVyUHJpY2U6IChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IFJlcyA9IHtcbiAgICAgIHN0YXR1czogMjAwLFxuICAgICAgZGF0YTogeyBsYXN0X21vZGlmaWVkOiBuZXcgRGF0ZSgpIH0sXG4gICAgfTtcbiAgICBjb25zdCBvcmRlciA9IHN0b3JhZ2Uub3JkZXJzLmZpbmQoT3JkZXIgPT4gT3JkZXIuaWQgPT09IHBhcnNlSW50KHJlcS5wYXJhbXMub3JkZXJJZCwgMTApKTtcbiAgICBpZiAob3JkZXIpIHtcbiAgICAgIGlmIChvcmRlci5zdGF0dXMgPT09ICdwZW5kaW5nJykge1xuICAgICAgICBvcmRlci5vbGRfUHJpY2Vfb2ZmZXIgPSBvcmRlci5wcmljZV9vZmZlcjtcbiAgICAgICAgb3JkZXIubmV3X1ByaWNlX29mZmVyID0gcmVxLmJvZHkucHJpY2Vfb2ZmZXI7XG4gICAgICAgIGRlbGV0ZSBvcmRlci5wcmljZV9vZmZlcjtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihSZXMuZGF0YSwgb3JkZXIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgUmVzLnN0YXR1cyA9IDQwNTtcbiAgICAgICAgUmVzLmRhdGEgPSBuZXcgRXJyb3IoNDA1LCAnVGhpcyBvcmRlciBjYW5ub3QgYmUgY2hhbmdlZCcpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBSZXMuc3RhdHVzID0gNDA0O1xuICAgICAgUmVzLmRhdGEgPSBuZXcgRXJyb3IoNDA0LCAnbm90IGZvdW5kJyk7XG4gICAgfVxuICAgIHJlcy5zdGF0dXMoUmVzLnN0YXR1cykuanNvbihSZXMuZGF0YSk7XG4gIH0sXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IG9yZGVycztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "orders.js"
      ],
      "names": [
        "Error",
        "status",
        "message",
        "orders",
        "createNewOrder",
        "req",
        "res",
        "Res",
        "data",
        "Object",
        "assign",
        "created_on",
        "Date",
        "body",
        "storage",
        "push",
        "json",
        "updateOrderPrice",
        "last_modified",
        "order",
        "find",
        "Order",
        "id",
        "parseInt",
        "params",
        "orderId",
        "old_Price_offer",
        "price_offer",
        "new_Price_offer"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;IAEMA,K,GACJ,eAAYC,MAAZ,EAAoBC,OAApB,EAA6B;AAAA;;AAC3B,OAAKD,MAAL,GAAcA,MAAd;AACA,OAAKC,OAAL,GAAeA,OAAf;AACD,C;;AAGH,IAAMC,MAAM,GAAG;AACbC,EAAAA,cAAc,EAAE,wBAACC,GAAD,EAAMC,GAAN,EAAc;AAC5B,QAAMC,GAAG,GAAG;AACVN,MAAAA,MAAM,EAAE,GADE;AAEVO,MAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAc;AAAEC,QAAAA,UAAU,EAAE,IAAIC,IAAJ;AAAd,OAAd,EAA0CP,GAAG,CAACQ,IAA9C;AAFI,KAAZ;;AAIAC,wBAAQX,MAAR,CAAeY,IAAf,CAAoBR,GAAG,CAACC,IAAxB;;AACAF,IAAAA,GAAG,CAACL,MAAJ,CAAWM,GAAG,CAACN,MAAf,EAAuBe,IAAvB,CAA4BT,GAAG,CAACC,IAAhC;AACD,GARY;AASbS,EAAAA,gBAAgB,EAAE,0BAACZ,GAAD,EAAMC,GAAN,EAAc;AAC9B,QAAMC,GAAG,GAAG;AACVN,MAAAA,MAAM,EAAE,GADE;AAEVO,MAAAA,IAAI,EAAE;AAAEU,QAAAA,aAAa,EAAE,IAAIN,IAAJ;AAAjB;AAFI,KAAZ;;AAIA,QAAMO,KAAK,GAAGL,oBAAQX,MAAR,CAAeiB,IAAf,CAAoB,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,EAAN,KAAaC,QAAQ,CAAClB,GAAG,CAACmB,MAAJ,CAAWC,OAAZ,EAAqB,EAArB,CAAzB;AAAA,KAAzB,CAAd;;AACA,QAAIN,KAAJ,EAAW;AACT,UAAIA,KAAK,CAAClB,MAAN,KAAiB,SAArB,EAAgC;AAC9BkB,QAAAA,KAAK,CAACO,eAAN,GAAwBP,KAAK,CAACQ,WAA9B;AACAR,QAAAA,KAAK,CAACS,eAAN,GAAwBvB,GAAG,CAACQ,IAAJ,CAASc,WAAjC;AACA,eAAOR,KAAK,CAACQ,WAAb;AACAlB,QAAAA,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACC,IAAlB,EAAwBW,KAAxB;AACD,OALD,MAKO;AACLZ,QAAAA,GAAG,CAACN,MAAJ,GAAa,GAAb;AACAM,QAAAA,GAAG,CAACC,IAAJ,GAAW,IAAIR,KAAJ,CAAU,GAAV,EAAe,8BAAf,CAAX;AACD;AACF,KAVD,MAUO;AACLO,MAAAA,GAAG,CAACN,MAAJ,GAAa,GAAb;AACAM,MAAAA,GAAG,CAACC,IAAJ,GAAW,IAAIR,KAAJ,CAAU,GAAV,EAAe,WAAf,CAAX;AACD;;AACDM,IAAAA,GAAG,CAACL,MAAJ,CAAWM,GAAG,CAACN,MAAf,EAAuBe,IAAvB,CAA4BT,GAAG,CAACC,IAAhC;AACD;AA9BY,CAAf;eAkCeL,M",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers",
      "sourcesContent": [
        "import storage from '../storage';\n\nclass Error {\n  constructor(status, message) {\n    this.status = status;\n    this.message = message;\n  }\n}\n\nconst orders = {\n  createNewOrder: (req, res) => {\n    const Res = {\n      status: 201,\n      data: Object.assign({ created_on: new Date() }, req.body),\n    };\n    storage.orders.push(Res.data);\n    res.status(Res.status).json(Res.data);\n  },\n  updateOrderPrice: (req, res) => {\n    const Res = {\n      status: 200,\n      data: { last_modified: new Date() },\n    };\n    const order = storage.orders.find(Order => Order.id === parseInt(req.params.orderId, 10));\n    if (order) {\n      if (order.status === 'pending') {\n        order.old_Price_offer = order.price_offer;\n        order.new_Price_offer = req.body.price_offer;\n        delete order.price_offer;\n        Object.assign(Res.data, order);\n      } else {\n        Res.status = 405;\n        Res.data = new Error(405, 'This order cannot be changed');\n      }\n    } else {\n      Res.status = 404;\n      Res.data = new Error(404, 'not found');\n    }\n    res.status(Res.status).json(Res.data);\n  },\n};\n\n\nexport default orders;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560360887246
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\controllers\\\\flags.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers\\flags.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers\\flags.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers\\flags.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers",
        "sourceFileName": "flags.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _storage = _interopRequireDefault(require(\"../storage\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar flags = {\n  createNewFlag: function createNewFlag(req, res) {\n    var Res = {\n      status: 201,\n      data: Object.assign({}, req.body)\n    };\n\n    _storage[\"default\"].flags.push(req.body);\n\n    res.status(Res.status).json(Res.data);\n  }\n};\nvar _default = flags;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZsYWdzLmpzIl0sIm5hbWVzIjpbImZsYWdzIiwiY3JlYXRlTmV3RmxhZyIsInJlcSIsInJlcyIsIlJlcyIsInN0YXR1cyIsImRhdGEiLCJPYmplY3QiLCJhc3NpZ24iLCJib2R5Iiwic3RvcmFnZSIsInB1c2giLCJqc29uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFNQSxLQUFLLEdBQUc7QUFDWkMsRUFBQUEsYUFBYSxFQUFFLHVCQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMzQixRQUFNQyxHQUFHLEdBQUc7QUFDVkMsTUFBQUEsTUFBTSxFQUFFLEdBREU7QUFFVkMsTUFBQUEsSUFBSSxFQUFFQyxNQUFNLENBQUNDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCTixHQUFHLENBQUNPLElBQXRCO0FBRkksS0FBWjs7QUFJQUMsd0JBQVFWLEtBQVIsQ0FBY1csSUFBZCxDQUFtQlQsR0FBRyxDQUFDTyxJQUF2Qjs7QUFDQU4sSUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVdELEdBQUcsQ0FBQ0MsTUFBZixFQUF1Qk8sSUFBdkIsQ0FBNEJSLEdBQUcsQ0FBQ0UsSUFBaEM7QUFDRDtBQVJXLENBQWQ7ZUFXZU4sSyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFNQUVDSElcXERvY3VtZW50c1xcQW5kZWxhXFxBdXRvIE1hcnRcXFNlcnZlclxcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3RvcmFnZSBmcm9tICcuLi9zdG9yYWdlJztcblxuY29uc3QgZmxhZ3MgPSB7XG4gIGNyZWF0ZU5ld0ZsYWc6IChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IFJlcyA9IHtcbiAgICAgIHN0YXR1czogMjAxLFxuICAgICAgZGF0YTogT2JqZWN0LmFzc2lnbih7fSwgcmVxLmJvZHkpLFxuICAgIH07XG4gICAgc3RvcmFnZS5mbGFncy5wdXNoKHJlcS5ib2R5KTtcbiAgICByZXMuc3RhdHVzKFJlcy5zdGF0dXMpLmpzb24oUmVzLmRhdGEpO1xuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgZmxhZ3M7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "flags.js"
      ],
      "names": [
        "flags",
        "createNewFlag",
        "req",
        "res",
        "Res",
        "status",
        "data",
        "Object",
        "assign",
        "body",
        "storage",
        "push",
        "json"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,KAAK,GAAG;AACZC,EAAAA,aAAa,EAAE,uBAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,QAAMC,GAAG,GAAG;AACVC,MAAAA,MAAM,EAAE,GADE;AAEVC,MAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,GAAG,CAACO,IAAtB;AAFI,KAAZ;;AAIAC,wBAAQV,KAAR,CAAcW,IAAd,CAAmBT,GAAG,CAACO,IAAvB;;AACAN,IAAAA,GAAG,CAACE,MAAJ,CAAWD,GAAG,CAACC,MAAf,EAAuBO,IAAvB,CAA4BR,GAAG,CAACE,IAAhC;AACD;AARW,CAAd;eAWeN,K",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\controllers",
      "sourcesContent": [
        "import storage from '../storage';\n\nconst flags = {\n  createNewFlag: (req, res) => {\n    const Res = {\n      status: 201,\n      data: Object.assign({}, req.body),\n    };\n    storage.flags.push(req.body);\n    res.status(Res.status).json(Res.data);\n  },\n};\n\nexport default flags;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560353663735
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\spec\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\spec\\\\advert.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\advert.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\advert.spec.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\advert.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
        "sourceFileName": "advert.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _request = _interopRequireDefault(require(\"request\"));\n\nvar _server = _interopRequireDefault(require(\"../src/server\"));\n\nvar _storage = _interopRequireDefault(require(\"../storage\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* eslint-env jasmine */\n// import debug from 'debug';\nvar start = function start() {\n  return _server[\"default\"];\n};\n\nstart();\ndescribe('get specific advert', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/advert/1',\n    headers: {\n      sender: 'user'\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"].get(options, function (error, response, body) {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 200', function () {\n    expect(data.status).toBe(200);\n  });\n  it('an advert object', function () {\n    expect(JSON.parse(data.body)).toEqual(_storage[\"default\"].adverts.find(function (ad) {\n      return ad.id === 1;\n    }));\n  });\n});\ndescribe('get nonexistent advert', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/adverts/003',\n    headers: {\n      sender: 'user'\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"].get(options, function (error, response, body) {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 404', function () {\n    expect(data.status).toBe(404);\n  });\n});\ndescribe('get all adverts', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/advert/',\n    headers: {\n      sender: 'admin'\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"].get(options, function (error, response, body) {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 200', function () {\n    expect(data.status).toBe(200);\n  });\n  it('array of all adverts', function () {\n    expect(JSON.parse(data.body)).toEqual(_storage[\"default\"].adverts);\n  });\n});\ndescribe('get all user adverts', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/user/1/advert/',\n    headers: {\n      sender: 'user'\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"].get(options, function (error, response, body) {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 200', function () {\n    expect(data.status).toBe(200);\n  });\n  it('array of all user adverts', function () {\n    expect(JSON.parse(data.body).every(function (obj) {\n      return obj.owner === 1;\n    })).toBe(true);\n  });\n});\ndescribe('get adverts by filter', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/advert?status=available',\n    headers: {\n      sender: 'user'\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"].get(options, function (error, response, body) {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 200', function () {\n    expect(data.status).toBe(200);\n  });\n  it('array of all filtered adverts', function () {\n    expect(JSON.parse(data.body).every(function (obj) {\n      return obj.status === 'available';\n    })).toBe(true);\n  });\n});\ndescribe('creating a new advert', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/advert/',\n    json: true,\n    method: 'post',\n    headers: {\n      sender: 'user'\n    },\n    body: {\n      id: 5,\n      owner: 1,\n      created_on: '21-05-2019',\n      condition: 'New',\n      status: 'available',\n      price: 18000000,\n      manufacturer: 'Honda',\n      model: 'CR-V',\n      body_type: 'SUV'\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"].post(options, function (error, response) {\n      data.status = response.statusCode;\n      done();\n    });\n  });\n  it('status 201', function () {\n    expect(data.status).toBe(201);\n  });\n  describe('check if advert was created', function () {\n    var data2 = {};\n    var options2 = {\n      url: 'http://localhost:3000/api/v1/advert/5',\n      headers: {\n        sender: 'user'\n      }\n    };\n    beforeAll(function (done) {\n      _request[\"default\"].get(options2, function (error, response, body) {\n        data2.status = response.statusCode;\n        data2.body = body;\n        done();\n      });\n    });\n    it('status 200', function () {\n      expect(data2.status).toBe(200);\n    });\n    it('advert object', function () {\n      expect(JSON.parse(data2.body)).toEqual({\n        id: 5,\n        owner: 1,\n        created_on: '21-05-2019',\n        condition: 'New',\n        status: 'available',\n        price: 18000000,\n        manufacturer: 'Honda',\n        model: 'CR-V',\n        body_type: 'SUV'\n      });\n    });\n  });\n});\ndescribe('update advert status', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/advert/1/status',\n    json: true,\n    method: 'patch',\n    headers: {\n      sender: 'user'\n    },\n    body: {\n      status: 'sold'\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"].patch(options, function (error, response) {\n      data.status = response.statusCode;\n      done();\n    });\n  });\n  it('status 202', function () {\n    expect(data.status).toBe(202);\n  });\n  describe('check if advert status was updated', function () {\n    var data2 = {};\n    var options2 = {\n      url: 'http://localhost:3000/api/v1/advert/1',\n      headers: {\n        sender: 'user'\n      }\n    };\n    beforeAll(function (done) {\n      _request[\"default\"].get(options2, function (error, response, body) {\n        data2.status = response.statusCode;\n        data2.body = body;\n        done();\n      });\n    });\n    it('status 200', function () {\n      expect(data2.status).toBe(200);\n      expect(JSON.parse(data2.body).status).toBe('sold');\n    });\n  });\n});\ndescribe('update advert price', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/advert/1/price',\n    json: true,\n    method: 'patch',\n    headers: {\n      sender: 'user'\n    },\n    body: {\n      price: 14000000\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"].patch(options, function (error, response) {\n      data.status = response.statusCode;\n      done();\n    });\n  });\n  it('status 202', function () {\n    expect(data.status).toBe(202);\n  });\n  describe('check if advert price was updated', function () {\n    var data2 = {};\n    var options2 = {\n      url: 'http://localhost:3000/api/v1/advert/1',\n      headers: {\n        sender: 'user'\n      }\n    };\n    beforeAll(function (done) {\n      _request[\"default\"].get(options2, function (error, response, body) {\n        data2.status = response.statusCode;\n        data2.body = body;\n        done();\n      });\n    });\n    it('status 200', function () {\n      expect(data2.status).toBe(200);\n      expect(JSON.parse(data2.body).price).toBe(14000000);\n    });\n  });\n});\ndescribe('deleting an advert', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/advert/2',\n    headers: {\n      sender: 'admin'\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"][\"delete\"](options, function (error, response) {\n      data.status = response.statusCode;\n      done();\n    });\n  });\n  it('status 200', function () {\n    expect(data.status).toBe(200);\n  });\n  describe('check if advert was deleted', function () {\n    var data2 = {};\n    var options2 = {\n      url: 'http://localhost:3000/api/v1/advert/2',\n      headers: {\n        sender: 'user'\n      }\n    };\n    beforeAll(function (done) {\n      _request[\"default\"].get(options2, function (error, response, body) {\n        data2.status = response.statusCode;\n        data2.body = body;\n        done();\n      });\n    });\n    it('status 404', function () {\n      expect(data2.status).toBe(404);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "advert.spec.js"
      ],
      "names": [
        "start",
        "Server",
        "describe",
        "data",
        "options",
        "url",
        "headers",
        "sender",
        "beforeAll",
        "done",
        "Request",
        "get",
        "error",
        "response",
        "body",
        "status",
        "statusCode",
        "it",
        "expect",
        "toBe",
        "JSON",
        "parse",
        "toEqual",
        "storage",
        "adverts",
        "find",
        "ad",
        "id",
        "every",
        "obj",
        "owner",
        "json",
        "method",
        "created_on",
        "condition",
        "price",
        "manufacturer",
        "model",
        "body_type",
        "post",
        "data2",
        "options2",
        "patch"
      ],
      "mappings": ";;AACA;;AAEA;;AACA;;;;AAJA;AAEA;AAIA,IAAMA,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAMC,kBAAN;AAAA,CAAd;;AACAD,KAAK;AAGLE,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AACpC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,uCADS;AAEdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAFK,GAAhB;AAMAC,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,wBAAQC,GAAR,CAAYP,OAAZ,EAAqB,UAACQ,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC9CX,MAAAA,IAAI,CAACY,MAAL,GAAcF,QAAQ,CAACG,UAAvB;AACAb,MAAAA,IAAI,CAACW,IAAL,GAAYA,IAAZ;AACAL,MAAAA,IAAI;AACL,KAJD;AAKD,GANQ,CAAT;AAOAQ,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACf,IAAI,CAACY,MAAN,CAAN,CAAoBI,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,kBAAD,EAAqB,YAAM;AAC3BC,IAAAA,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWlB,IAAI,CAACW,IAAhB,CAAD,CAAN,CAA8BQ,OAA9B,CAAsCC,oBAAQC,OAAR,CAAgBC,IAAhB,CAAqB,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACC,EAAH,KAAU,CAAd;AAAA,KAAvB,CAAtC;AACD,GAFC,CAAF;AAGD,CArBO,CAAR;AAuBAzB,QAAQ,CAAC,wBAAD,EAA2B,YAAM;AACvC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,0CADS;AAEdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAFK,GAAhB;AAMAC,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,wBAAQC,GAAR,CAAYP,OAAZ,EAAqB,UAACQ,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC9CX,MAAAA,IAAI,CAACY,MAAL,GAAcF,QAAQ,CAACG,UAAvB;AACAb,MAAAA,IAAI,CAACW,IAAL,GAAYA,IAAZ;AACAL,MAAAA,IAAI;AACL,KAJD;AAKD,GANQ,CAAT;AAOAQ,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACf,IAAI,CAACY,MAAN,CAAN,CAAoBI,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGD,CAlBO,CAAR;AAoBAjB,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAChC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,sCADS;AAEdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAFK,GAAhB;AAMAC,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,wBAAQC,GAAR,CAAYP,OAAZ,EAAqB,UAACQ,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC9CX,MAAAA,IAAI,CAACY,MAAL,GAAcF,QAAQ,CAACG,UAAvB;AACAb,MAAAA,IAAI,CAACW,IAAL,GAAYA,IAAZ;AACAL,MAAAA,IAAI;AACL,KAJD;AAKD,GANQ,CAAT;AAOAQ,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACf,IAAI,CAACY,MAAN,CAAN,CAAoBI,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,sBAAD,EAAyB,YAAM;AAC/BC,IAAAA,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWlB,IAAI,CAACW,IAAhB,CAAD,CAAN,CAA8BQ,OAA9B,CAAsCC,oBAAQC,OAA9C;AACD,GAFC,CAAF;AAGD,CArBO,CAAR;AAuBAtB,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,6CADS;AAEdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAFK,GAAhB;AAMAC,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,wBAAQC,GAAR,CAAYP,OAAZ,EAAqB,UAACQ,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC9CX,MAAAA,IAAI,CAACY,MAAL,GAAcF,QAAQ,CAACG,UAAvB;AACAb,MAAAA,IAAI,CAACW,IAAL,GAAYA,IAAZ;AACAL,MAAAA,IAAI;AACL,KAJD;AAKD,GANQ,CAAT;AAOAQ,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACf,IAAI,CAACY,MAAN,CAAN,CAAoBI,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAM;AACpCC,IAAAA,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWlB,IAAI,CAACW,IAAhB,EAAsBc,KAAtB,CAA4B,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,KAAJ,KAAc,CAAlB;AAAA,KAA/B,CAAD,CAAN,CAA4DX,IAA5D,CAAiE,IAAjE;AACD,GAFC,CAAF;AAGD,CArBO,CAAR;AAuBAjB,QAAQ,CAAC,uBAAD,EAA0B,YAAM;AACtC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,sDADS;AAEdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAFK,GAAhB;AAMAC,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,wBAAQC,GAAR,CAAYP,OAAZ,EAAqB,UAACQ,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC9CX,MAAAA,IAAI,CAACY,MAAL,GAAcF,QAAQ,CAACG,UAAvB;AACAb,MAAAA,IAAI,CAACW,IAAL,GAAYA,IAAZ;AACAL,MAAAA,IAAI;AACL,KAJD;AAKD,GANQ,CAAT;AAOAQ,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACf,IAAI,CAACY,MAAN,CAAN,CAAoBI,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAM;AACxCC,IAAAA,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWlB,IAAI,CAACW,IAAhB,EAAsBc,KAAtB,CAA4B,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACd,MAAJ,KAAe,WAAnB;AAAA,KAA/B,CAAD,CAAN,CAAuEI,IAAvE,CAA4E,IAA5E;AACD,GAFC,CAAF;AAGD,CArBO,CAAR;AAuBAjB,QAAQ,CAAC,uBAAD,EAA0B,YAAM;AACtC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,sCADS;AAEd0B,IAAAA,IAAI,EAAE,IAFQ;AAGdC,IAAAA,MAAM,EAAE,MAHM;AAId1B,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD,KAJK;AAOdO,IAAAA,IAAI,EAAE;AACJa,MAAAA,EAAE,EAAE,CADA;AAEJG,MAAAA,KAAK,EAAE,CAFH;AAGJG,MAAAA,UAAU,EAAE,YAHR;AAIJC,MAAAA,SAAS,EAAE,KAJP;AAKJnB,MAAAA,MAAM,EAAE,WALJ;AAMJoB,MAAAA,KAAK,EAAE,QANH;AAOJC,MAAAA,YAAY,EAAE,OAPV;AAQJC,MAAAA,KAAK,EAAE,MARH;AASJC,MAAAA,SAAS,EAAE;AATP;AAPQ,GAAhB;AAmBA9B,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,wBAAQ6B,IAAR,CAAanC,OAAb,EAAsB,UAACQ,KAAD,EAAQC,QAAR,EAAqB;AACzCV,MAAAA,IAAI,CAACY,MAAL,GAAcF,QAAQ,CAACG,UAAvB;AACAP,MAAAA,IAAI;AACL,KAHD;AAID,GALQ,CAAT;AAMAQ,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACf,IAAI,CAACY,MAAN,CAAN,CAAoBI,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGAjB,EAAAA,QAAQ,CAAC,6BAAD,EAAgC,YAAM;AAC5C,QAAMsC,KAAK,GAAG,EAAd;AACA,QAAMC,QAAQ,GAAG;AACfpC,MAAAA,GAAG,EAAE,uCADU;AAEfC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAFM,KAAjB;AAMAC,IAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,0BAAQC,GAAR,CAAY8B,QAAZ,EAAsB,UAAC7B,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC/C0B,QAAAA,KAAK,CAACzB,MAAN,GAAeF,QAAQ,CAACG,UAAxB;AACAwB,QAAAA,KAAK,CAAC1B,IAAN,GAAaA,IAAb;AACAL,QAAAA,IAAI;AACL,OAJD;AAKD,KANQ,CAAT;AAOAQ,IAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,MAAAA,MAAM,CAACsB,KAAK,CAACzB,MAAP,CAAN,CAAqBI,IAArB,CAA0B,GAA1B;AACD,KAFC,CAAF;AAGAF,IAAAA,EAAE,CAAC,eAAD,EAAkB,YAAM;AACxBC,MAAAA,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWmB,KAAK,CAAC1B,IAAjB,CAAD,CAAN,CAA+BQ,OAA/B,CAAuC;AACrCK,QAAAA,EAAE,EAAE,CADiC;AAErCG,QAAAA,KAAK,EAAE,CAF8B;AAGrCG,QAAAA,UAAU,EAAE,YAHyB;AAIrCC,QAAAA,SAAS,EAAE,KAJ0B;AAKrCnB,QAAAA,MAAM,EAAE,WAL6B;AAMrCoB,QAAAA,KAAK,EAAE,QAN8B;AAOrCC,QAAAA,YAAY,EAAE,OAPuB;AAQrCC,QAAAA,KAAK,EAAE,MAR8B;AASrCC,QAAAA,SAAS,EAAE;AAT0B,OAAvC;AAWD,KAZC,CAAF;AAaD,GA/BO,CAAR;AAgCD,CA9DO,CAAR;AAgEApC,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,8CADS;AAEd0B,IAAAA,IAAI,EAAE,IAFQ;AAGdC,IAAAA,MAAM,EAAE,OAHM;AAId1B,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD,KAJK;AAOdO,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE;AADJ;AAPQ,GAAhB;AAWAP,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,wBAAQgC,KAAR,CAActC,OAAd,EAAuB,UAACQ,KAAD,EAAQC,QAAR,EAAqB;AAC1CV,MAAAA,IAAI,CAACY,MAAL,GAAcF,QAAQ,CAACG,UAAvB;AACAP,MAAAA,IAAI;AACL,KAHD;AAID,GALQ,CAAT;AAMAQ,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACf,IAAI,CAACY,MAAN,CAAN,CAAoBI,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGAjB,EAAAA,QAAQ,CAAC,oCAAD,EAAuC,YAAM;AACnD,QAAMsC,KAAK,GAAG,EAAd;AACA,QAAMC,QAAQ,GAAG;AACfpC,MAAAA,GAAG,EAAE,uCADU;AAEfC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAFM,KAAjB;AAMAC,IAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,0BAAQC,GAAR,CAAY8B,QAAZ,EAAsB,UAAC7B,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC/C0B,QAAAA,KAAK,CAACzB,MAAN,GAAeF,QAAQ,CAACG,UAAxB;AACAwB,QAAAA,KAAK,CAAC1B,IAAN,GAAaA,IAAb;AACAL,QAAAA,IAAI;AACL,OAJD;AAKD,KANQ,CAAT;AAOAQ,IAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,MAAAA,MAAM,CAACsB,KAAK,CAACzB,MAAP,CAAN,CAAqBI,IAArB,CAA0B,GAA1B;AACAD,MAAAA,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWmB,KAAK,CAAC1B,IAAjB,EAAuBC,MAAxB,CAAN,CAAsCI,IAAtC,CAA2C,MAA3C;AACD,KAHC,CAAF;AAID,GAnBO,CAAR;AAoBD,CA1CO,CAAR;AA4CAjB,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AACpC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,6CADS;AAEd0B,IAAAA,IAAI,EAAE,IAFQ;AAGdC,IAAAA,MAAM,EAAE,OAHM;AAId1B,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD,KAJK;AAOdO,IAAAA,IAAI,EAAE;AACJqB,MAAAA,KAAK,EAAE;AADH;AAPQ,GAAhB;AAWA3B,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,wBAAQgC,KAAR,CAActC,OAAd,EAAuB,UAACQ,KAAD,EAAQC,QAAR,EAAqB;AAC1CV,MAAAA,IAAI,CAACY,MAAL,GAAcF,QAAQ,CAACG,UAAvB;AACAP,MAAAA,IAAI;AACL,KAHD;AAID,GALQ,CAAT;AAMAQ,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACf,IAAI,CAACY,MAAN,CAAN,CAAoBI,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGAjB,EAAAA,QAAQ,CAAC,mCAAD,EAAsC,YAAM;AAClD,QAAMsC,KAAK,GAAG,EAAd;AACA,QAAMC,QAAQ,GAAG;AACfpC,MAAAA,GAAG,EAAE,uCADU;AAEfC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAFM,KAAjB;AAMAC,IAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,0BAAQC,GAAR,CAAY8B,QAAZ,EAAsB,UAAC7B,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC/C0B,QAAAA,KAAK,CAACzB,MAAN,GAAeF,QAAQ,CAACG,UAAxB;AACAwB,QAAAA,KAAK,CAAC1B,IAAN,GAAaA,IAAb;AACAL,QAAAA,IAAI;AACL,OAJD;AAKD,KANQ,CAAT;AAOAQ,IAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,MAAAA,MAAM,CAACsB,KAAK,CAACzB,MAAP,CAAN,CAAqBI,IAArB,CAA0B,GAA1B;AACAD,MAAAA,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWmB,KAAK,CAAC1B,IAAjB,EAAuBqB,KAAxB,CAAN,CAAqChB,IAArC,CAA0C,QAA1C;AACD,KAHC,CAAF;AAID,GAnBO,CAAR;AAoBD,CA1CO,CAAR;AA4CAjB,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACnC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,uCADS;AAEdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAFK,GAAhB;AAMAC,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,kCAAeN,OAAf,EAAwB,UAACQ,KAAD,EAAQC,QAAR,EAAqB;AAC3CV,MAAAA,IAAI,CAACY,MAAL,GAAcF,QAAQ,CAACG,UAAvB;AACAP,MAAAA,IAAI;AACL,KAHD;AAID,GALQ,CAAT;AAMAQ,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACf,IAAI,CAACY,MAAN,CAAN,CAAoBI,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGAjB,EAAAA,QAAQ,CAAC,6BAAD,EAAgC,YAAM;AAC5C,QAAMsC,KAAK,GAAG,EAAd;AACA,QAAMC,QAAQ,GAAG;AACfpC,MAAAA,GAAG,EAAE,uCADU;AAEfC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAFM,KAAjB;AAMAC,IAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,0BAAQC,GAAR,CAAY8B,QAAZ,EAAsB,UAAC7B,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC/C0B,QAAAA,KAAK,CAACzB,MAAN,GAAeF,QAAQ,CAACG,UAAxB;AACAwB,QAAAA,KAAK,CAAC1B,IAAN,GAAaA,IAAb;AACAL,QAAAA,IAAI;AACL,OAJD;AAKD,KANQ,CAAT;AAOAQ,IAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,MAAAA,MAAM,CAACsB,KAAK,CAACzB,MAAP,CAAN,CAAqBI,IAArB,CAA0B,GAA1B;AACD,KAFC,CAAF;AAGD,GAlBO,CAAR;AAmBD,CApCO,CAAR",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
      "sourcesContent": [
        "/* eslint-env jasmine */\nimport Request from 'request';\n// import debug from 'debug';\nimport Server from '../src/server';\nimport storage from '../storage';\n\nconst start = () => Server;\nstart();\n\n\ndescribe('get specific advert', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/advert/1',\n    headers: {\n      sender: 'user',\n    },\n  };\n  beforeAll((done) => {\n    Request.get(options, (error, response, body) => {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 200', () => {\n    expect(data.status).toBe(200);\n  });\n  it('an advert object', () => {\n    expect(JSON.parse(data.body)).toEqual(storage.adverts.find(ad => ad.id === 1));\n  });\n});\n\ndescribe('get nonexistent advert', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/adverts/003',\n    headers: {\n      sender: 'user',\n    },\n  };\n  beforeAll((done) => {\n    Request.get(options, (error, response, body) => {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 404', () => {\n    expect(data.status).toBe(404);\n  });\n});\n\ndescribe('get all adverts', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/advert/',\n    headers: {\n      sender: 'admin',\n    },\n  };\n  beforeAll((done) => {\n    Request.get(options, (error, response, body) => {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 200', () => {\n    expect(data.status).toBe(200);\n  });\n  it('array of all adverts', () => {\n    expect(JSON.parse(data.body)).toEqual(storage.adverts);\n  });\n});\n\ndescribe('get all user adverts', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/user/1/advert/',\n    headers: {\n      sender: 'user',\n    },\n  };\n  beforeAll((done) => {\n    Request.get(options, (error, response, body) => {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 200', () => {\n    expect(data.status).toBe(200);\n  });\n  it('array of all user adverts', () => {\n    expect(JSON.parse(data.body).every(obj => obj.owner === 1)).toBe(true);\n  });\n});\n\ndescribe('get adverts by filter', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/advert?status=available',\n    headers: {\n      sender: 'user',\n    },\n  };\n  beforeAll((done) => {\n    Request.get(options, (error, response, body) => {\n      data.status = response.statusCode;\n      data.body = body;\n      done();\n    });\n  });\n  it('status 200', () => {\n    expect(data.status).toBe(200);\n  });\n  it('array of all filtered adverts', () => {\n    expect(JSON.parse(data.body).every(obj => obj.status === 'available')).toBe(true);\n  });\n});\n\ndescribe('creating a new advert', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/advert/',\n    json: true,\n    method: 'post',\n    headers: {\n      sender: 'user',\n    },\n    body: {\n      id: 5,\n      owner: 1,\n      created_on: '21-05-2019',\n      condition: 'New',\n      status: 'available',\n      price: 18000000,\n      manufacturer: 'Honda',\n      model: 'CR-V',\n      body_type: 'SUV',\n    },\n  };\n  beforeAll((done) => {\n    Request.post(options, (error, response) => {\n      data.status = response.statusCode;\n      done();\n    });\n  });\n  it('status 201', () => {\n    expect(data.status).toBe(201);\n  });\n  describe('check if advert was created', () => {\n    const data2 = {};\n    const options2 = {\n      url: 'http://localhost:3000/api/v1/advert/5',\n      headers: {\n        sender: 'user',\n      },\n    };\n    beforeAll((done) => {\n      Request.get(options2, (error, response, body) => {\n        data2.status = response.statusCode;\n        data2.body = body;\n        done();\n      });\n    });\n    it('status 200', () => {\n      expect(data2.status).toBe(200);\n    });\n    it('advert object', () => {\n      expect(JSON.parse(data2.body)).toEqual({\n        id: 5,\n        owner: 1,\n        created_on: '21-05-2019',\n        condition: 'New',\n        status: 'available',\n        price: 18000000,\n        manufacturer: 'Honda',\n        model: 'CR-V',\n        body_type: 'SUV',\n      });\n    });\n  });\n});\n\ndescribe('update advert status', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/advert/1/status',\n    json: true,\n    method: 'patch',\n    headers: {\n      sender: 'user',\n    },\n    body: {\n      status: 'sold',\n    },\n  };\n  beforeAll((done) => {\n    Request.patch(options, (error, response) => {\n      data.status = response.statusCode;\n      done();\n    });\n  });\n  it('status 202', () => {\n    expect(data.status).toBe(202);\n  });\n  describe('check if advert status was updated', () => {\n    const data2 = {};\n    const options2 = {\n      url: 'http://localhost:3000/api/v1/advert/1',\n      headers: {\n        sender: 'user',\n      },\n    };\n    beforeAll((done) => {\n      Request.get(options2, (error, response, body) => {\n        data2.status = response.statusCode;\n        data2.body = body;\n        done();\n      });\n    });\n    it('status 200', () => {\n      expect(data2.status).toBe(200);\n      expect(JSON.parse(data2.body).status).toBe('sold');\n    });\n  });\n});\n\ndescribe('update advert price', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/advert/1/price',\n    json: true,\n    method: 'patch',\n    headers: {\n      sender: 'user',\n    },\n    body: {\n      price: 14000000,\n    },\n  };\n  beforeAll((done) => {\n    Request.patch(options, (error, response) => {\n      data.status = response.statusCode;\n      done();\n    });\n  });\n  it('status 202', () => {\n    expect(data.status).toBe(202);\n  });\n  describe('check if advert price was updated', () => {\n    const data2 = {};\n    const options2 = {\n      url: 'http://localhost:3000/api/v1/advert/1',\n      headers: {\n        sender: 'user',\n      },\n    };\n    beforeAll((done) => {\n      Request.get(options2, (error, response, body) => {\n        data2.status = response.statusCode;\n        data2.body = body;\n        done();\n      });\n    });\n    it('status 200', () => {\n      expect(data2.status).toBe(200);\n      expect(JSON.parse(data2.body).price).toBe(14000000);\n    });\n  });\n});\n\ndescribe('deleting an advert', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/advert/2',\n    headers: {\n      sender: 'admin',\n    },\n  };\n  beforeAll((done) => {\n    Request.delete(options, (error, response) => {\n      data.status = response.statusCode;\n      done();\n    });\n  });\n  it('status 200', () => {\n    expect(data.status).toBe(200);\n  });\n  describe('check if advert was deleted', () => {\n    const data2 = {};\n    const options2 = {\n      url: 'http://localhost:3000/api/v1/advert/2',\n      headers: {\n        sender: 'user',\n      },\n    };\n    beforeAll((done) => {\n      Request.get(options2, (error, response, body) => {\n        data2.status = response.statusCode;\n        data2.body = body;\n        done();\n      });\n    });\n    it('status 404', () => {\n      expect(data2.status).toBe(404);\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560436031854
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\spec\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"filename\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\\\\spec\\\\order.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AMAECHI\\\\Documents\\\\Andela\\\\Auto Mart\\\\Server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\order.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\order.spec.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec\\order.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
        "sourceFileName": "order.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _request = _interopRequireDefault(require(\"request\"));\n\nvar _server = _interopRequireDefault(require(\"../src/server\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* eslint-env jasmine */\n// import storage from '../storage';\nvar start = function start() {\n  return _server[\"default\"];\n};\n\nstart();\ndescribe('creating a new order', function () {\n  var data = {};\n  var options = {\n    url: 'http://localhost:3000/api/v1/order/',\n    json: true,\n    method: 'post',\n    headers: {\n      sender: 'user'\n    },\n    body: {\n      created_on: '',\n      id: 7,\n      buyer: 2,\n      carId: 1,\n      price: 13700000,\n      price_offer: 12000000,\n      status: 'pending'\n    }\n  };\n  beforeAll(function (done) {\n    _request[\"default\"].post(options, function (error, response) {\n      data.status = response.statusCode;\n      done();\n    });\n  });\n  it('status 201', function () {\n    expect(data.status).toBe(201);\n  });\n  describe('check if order was created', function () {\n    var data2 = {};\n    var options2 = {\n      url: 'http://localhost:3000/api/v1/order/7',\n      headers: {\n        sender: 'user'\n      }\n    };\n    beforeAll(function (done) {\n      _request[\"default\"].get(options2, function (error, response, body) {\n        data2.status = response.statusCode;\n        data2.body = body;\n        done();\n      });\n    });\n    it('status 200', function () {\n      expect(data2.status).toBe(200);\n    });\n    it('aorder object', function () {\n      expect(JSON.parse(data2.body)).toEqual({\n        created_on: '',\n        id: 7,\n        buyer: 2,\n        carId: 1,\n        price: 13700000,\n        price_offer: 12000000,\n        status: 'pending'\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnNwZWMuanMiXSwibmFtZXMiOlsic3RhcnQiLCJTZXJ2ZXIiLCJkZXNjcmliZSIsImRhdGEiLCJvcHRpb25zIiwidXJsIiwianNvbiIsIm1ldGhvZCIsImhlYWRlcnMiLCJzZW5kZXIiLCJib2R5IiwiY3JlYXRlZF9vbiIsImlkIiwiYnV5ZXIiLCJjYXJJZCIsInByaWNlIiwicHJpY2Vfb2ZmZXIiLCJzdGF0dXMiLCJiZWZvcmVBbGwiLCJkb25lIiwiUmVxdWVzdCIsInBvc3QiLCJlcnJvciIsInJlc3BvbnNlIiwic3RhdHVzQ29kZSIsIml0IiwiZXhwZWN0IiwidG9CZSIsImRhdGEyIiwib3B0aW9uczIiLCJnZXQiLCJKU09OIiwicGFyc2UiLCJ0b0VxdWFsIl0sIm1hcHBpbmdzIjoiOztBQUNBOztBQUNBOzs7O0FBRkE7QUFHQTtBQUVBLElBQU1BLEtBQUssR0FBRyxTQUFSQSxLQUFRO0FBQUEsU0FBTUMsa0JBQU47QUFBQSxDQUFkOztBQUNBRCxLQUFLO0FBRUxFLFFBQVEsQ0FBQyxzQkFBRCxFQUF5QixZQUFNO0FBQ3JDLE1BQU1DLElBQUksR0FBRyxFQUFiO0FBQ0EsTUFBTUMsT0FBTyxHQUFHO0FBQ2RDLElBQUFBLEdBQUcsRUFBRSxxQ0FEUztBQUVkQyxJQUFBQSxJQUFJLEVBQUUsSUFGUTtBQUdkQyxJQUFBQSxNQUFNLEVBQUUsTUFITTtBQUlkQyxJQUFBQSxPQUFPLEVBQUU7QUFDUEMsTUFBQUEsTUFBTSxFQUFFO0FBREQsS0FKSztBQU9kQyxJQUFBQSxJQUFJLEVBQUU7QUFDSkMsTUFBQUEsVUFBVSxFQUFFLEVBRFI7QUFFSkMsTUFBQUEsRUFBRSxFQUFFLENBRkE7QUFHSkMsTUFBQUEsS0FBSyxFQUFFLENBSEg7QUFJSkMsTUFBQUEsS0FBSyxFQUFFLENBSkg7QUFLSkMsTUFBQUEsS0FBSyxFQUFFLFFBTEg7QUFNSkMsTUFBQUEsV0FBVyxFQUFFLFFBTlQ7QUFPSkMsTUFBQUEsTUFBTSxFQUFFO0FBUEo7QUFQUSxHQUFoQjtBQWlCQUMsRUFBQUEsU0FBUyxDQUFDLFVBQUNDLElBQUQsRUFBVTtBQUNsQkMsd0JBQVFDLElBQVIsQ0FBYWpCLE9BQWIsRUFBc0IsVUFBQ2tCLEtBQUQsRUFBUUMsUUFBUixFQUFxQjtBQUN6Q3BCLE1BQUFBLElBQUksQ0FBQ2MsTUFBTCxHQUFjTSxRQUFRLENBQUNDLFVBQXZCO0FBQ0FMLE1BQUFBLElBQUk7QUFDTCxLQUhEO0FBSUQsR0FMUSxDQUFUO0FBTUFNLEVBQUFBLEVBQUUsQ0FBQyxZQUFELEVBQWUsWUFBTTtBQUNyQkMsSUFBQUEsTUFBTSxDQUFDdkIsSUFBSSxDQUFDYyxNQUFOLENBQU4sQ0FBb0JVLElBQXBCLENBQXlCLEdBQXpCO0FBQ0QsR0FGQyxDQUFGO0FBR0F6QixFQUFBQSxRQUFRLENBQUMsNEJBQUQsRUFBK0IsWUFBTTtBQUMzQyxRQUFNMEIsS0FBSyxHQUFHLEVBQWQ7QUFDQSxRQUFNQyxRQUFRLEdBQUc7QUFDZnhCLE1BQUFBLEdBQUcsRUFBRSxzQ0FEVTtBQUVmRyxNQUFBQSxPQUFPLEVBQUU7QUFDUEMsUUFBQUEsTUFBTSxFQUFFO0FBREQ7QUFGTSxLQUFqQjtBQU1BUyxJQUFBQSxTQUFTLENBQUMsVUFBQ0MsSUFBRCxFQUFVO0FBQ2xCQywwQkFBUVUsR0FBUixDQUFZRCxRQUFaLEVBQXNCLFVBQUNQLEtBQUQsRUFBUUMsUUFBUixFQUFrQmIsSUFBbEIsRUFBMkI7QUFDL0NrQixRQUFBQSxLQUFLLENBQUNYLE1BQU4sR0FBZU0sUUFBUSxDQUFDQyxVQUF4QjtBQUNBSSxRQUFBQSxLQUFLLENBQUNsQixJQUFOLEdBQWFBLElBQWI7QUFDQVMsUUFBQUEsSUFBSTtBQUNMLE9BSkQ7QUFLRCxLQU5RLENBQVQ7QUFPQU0sSUFBQUEsRUFBRSxDQUFDLFlBQUQsRUFBZSxZQUFNO0FBQ3JCQyxNQUFBQSxNQUFNLENBQUNFLEtBQUssQ0FBQ1gsTUFBUCxDQUFOLENBQXFCVSxJQUFyQixDQUEwQixHQUExQjtBQUNELEtBRkMsQ0FBRjtBQUdBRixJQUFBQSxFQUFFLENBQUMsZUFBRCxFQUFrQixZQUFNO0FBQ3hCQyxNQUFBQSxNQUFNLENBQUNLLElBQUksQ0FBQ0MsS0FBTCxDQUFXSixLQUFLLENBQUNsQixJQUFqQixDQUFELENBQU4sQ0FBK0J1QixPQUEvQixDQUF1QztBQUNyQ3RCLFFBQUFBLFVBQVUsRUFBRSxFQUR5QjtBQUVyQ0MsUUFBQUEsRUFBRSxFQUFFLENBRmlDO0FBR3JDQyxRQUFBQSxLQUFLLEVBQUUsQ0FIOEI7QUFJckNDLFFBQUFBLEtBQUssRUFBRSxDQUo4QjtBQUtyQ0MsUUFBQUEsS0FBSyxFQUFFLFFBTDhCO0FBTXJDQyxRQUFBQSxXQUFXLEVBQUUsUUFOd0I7QUFPckNDLFFBQUFBLE1BQU0sRUFBRTtBQVA2QixPQUF2QztBQVNELEtBVkMsQ0FBRjtBQVdELEdBN0JPLENBQVI7QUE4QkQsQ0ExRE8sQ0FBUiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFNQUVDSElcXERvY3VtZW50c1xcQW5kZWxhXFxBdXRvIE1hcnRcXFNlcnZlclxcc3BlYyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgamFzbWluZSAqL1xuaW1wb3J0IFJlcXVlc3QgZnJvbSAncmVxdWVzdCc7XG5pbXBvcnQgU2VydmVyIGZyb20gJy4uL3NyYy9zZXJ2ZXInO1xuLy8gaW1wb3J0IHN0b3JhZ2UgZnJvbSAnLi4vc3RvcmFnZSc7XG5cbmNvbnN0IHN0YXJ0ID0gKCkgPT4gU2VydmVyO1xuc3RhcnQoKTtcblxuZGVzY3JpYmUoJ2NyZWF0aW5nIGEgbmV3IG9yZGVyJywgKCkgPT4ge1xuICBjb25zdCBkYXRhID0ge307XG4gIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgdXJsOiAnaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS92MS9vcmRlci8nLFxuICAgIGpzb246IHRydWUsXG4gICAgbWV0aG9kOiAncG9zdCcsXG4gICAgaGVhZGVyczoge1xuICAgICAgc2VuZGVyOiAndXNlcicsXG4gICAgfSxcbiAgICBib2R5OiB7XG4gICAgICBjcmVhdGVkX29uOiAnJyxcbiAgICAgIGlkOiA3LFxuICAgICAgYnV5ZXI6IDIsXG4gICAgICBjYXJJZDogMSxcbiAgICAgIHByaWNlOiAxMzcwMDAwMCxcbiAgICAgIHByaWNlX29mZmVyOiAxMjAwMDAwMCxcbiAgICAgIHN0YXR1czogJ3BlbmRpbmcnLFxuICAgIH0sXG4gIH07XG4gIGJlZm9yZUFsbCgoZG9uZSkgPT4ge1xuICAgIFJlcXVlc3QucG9zdChvcHRpb25zLCAoZXJyb3IsIHJlc3BvbnNlKSA9PiB7XG4gICAgICBkYXRhLnN0YXR1cyA9IHJlc3BvbnNlLnN0YXR1c0NvZGU7XG4gICAgICBkb25lKCk7XG4gICAgfSk7XG4gIH0pO1xuICBpdCgnc3RhdHVzIDIwMScsICgpID0+IHtcbiAgICBleHBlY3QoZGF0YS5zdGF0dXMpLnRvQmUoMjAxKTtcbiAgfSk7XG4gIGRlc2NyaWJlKCdjaGVjayBpZiBvcmRlciB3YXMgY3JlYXRlZCcsICgpID0+IHtcbiAgICBjb25zdCBkYXRhMiA9IHt9O1xuICAgIGNvbnN0IG9wdGlvbnMyID0ge1xuICAgICAgdXJsOiAnaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS92MS9vcmRlci83JyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgc2VuZGVyOiAndXNlcicsXG4gICAgICB9LFxuICAgIH07XG4gICAgYmVmb3JlQWxsKChkb25lKSA9PiB7XG4gICAgICBSZXF1ZXN0LmdldChvcHRpb25zMiwgKGVycm9yLCByZXNwb25zZSwgYm9keSkgPT4ge1xuICAgICAgICBkYXRhMi5zdGF0dXMgPSByZXNwb25zZS5zdGF0dXNDb2RlO1xuICAgICAgICBkYXRhMi5ib2R5ID0gYm9keTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgaXQoJ3N0YXR1cyAyMDAnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoZGF0YTIuc3RhdHVzKS50b0JlKDIwMCk7XG4gICAgfSk7XG4gICAgaXQoJ2FvcmRlciBvYmplY3QnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoSlNPTi5wYXJzZShkYXRhMi5ib2R5KSkudG9FcXVhbCh7XG4gICAgICAgIGNyZWF0ZWRfb246ICcnLFxuICAgICAgICBpZDogNyxcbiAgICAgICAgYnV5ZXI6IDIsXG4gICAgICAgIGNhcklkOiAxLFxuICAgICAgICBwcmljZTogMTM3MDAwMDAsXG4gICAgICAgIHByaWNlX29mZmVyOiAxMjAwMDAwMCxcbiAgICAgICAgc3RhdHVzOiAncGVuZGluZycsXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "order.spec.js"
      ],
      "names": [
        "start",
        "Server",
        "describe",
        "data",
        "options",
        "url",
        "json",
        "method",
        "headers",
        "sender",
        "body",
        "created_on",
        "id",
        "buyer",
        "carId",
        "price",
        "price_offer",
        "status",
        "beforeAll",
        "done",
        "Request",
        "post",
        "error",
        "response",
        "statusCode",
        "it",
        "expect",
        "toBe",
        "data2",
        "options2",
        "get",
        "JSON",
        "parse",
        "toEqual"
      ],
      "mappings": ";;AACA;;AACA;;;;AAFA;AAGA;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAMC,kBAAN;AAAA,CAAd;;AACAD,KAAK;AAELE,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAE,qCADS;AAEdC,IAAAA,IAAI,EAAE,IAFQ;AAGdC,IAAAA,MAAM,EAAE,MAHM;AAIdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD,KAJK;AAOdC,IAAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,EAAE,EAAE,CAFA;AAGJC,MAAAA,KAAK,EAAE,CAHH;AAIJC,MAAAA,KAAK,EAAE,CAJH;AAKJC,MAAAA,KAAK,EAAE,QALH;AAMJC,MAAAA,WAAW,EAAE,QANT;AAOJC,MAAAA,MAAM,EAAE;AAPJ;AAPQ,GAAhB;AAiBAC,EAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,wBAAQC,IAAR,CAAajB,OAAb,EAAsB,UAACkB,KAAD,EAAQC,QAAR,EAAqB;AACzCpB,MAAAA,IAAI,CAACc,MAAL,GAAcM,QAAQ,CAACC,UAAvB;AACAL,MAAAA,IAAI;AACL,KAHD;AAID,GALQ,CAAT;AAMAM,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,IAAAA,MAAM,CAACvB,IAAI,CAACc,MAAN,CAAN,CAAoBU,IAApB,CAAyB,GAAzB;AACD,GAFC,CAAF;AAGAzB,EAAAA,QAAQ,CAAC,4BAAD,EAA+B,YAAM;AAC3C,QAAM0B,KAAK,GAAG,EAAd;AACA,QAAMC,QAAQ,GAAG;AACfxB,MAAAA,GAAG,EAAE,sCADU;AAEfG,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAFM,KAAjB;AAMAS,IAAAA,SAAS,CAAC,UAACC,IAAD,EAAU;AAClBC,0BAAQU,GAAR,CAAYD,QAAZ,EAAsB,UAACP,KAAD,EAAQC,QAAR,EAAkBb,IAAlB,EAA2B;AAC/CkB,QAAAA,KAAK,CAACX,MAAN,GAAeM,QAAQ,CAACC,UAAxB;AACAI,QAAAA,KAAK,CAAClB,IAAN,GAAaA,IAAb;AACAS,QAAAA,IAAI;AACL,OAJD;AAKD,KANQ,CAAT;AAOAM,IAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACrBC,MAAAA,MAAM,CAACE,KAAK,CAACX,MAAP,CAAN,CAAqBU,IAArB,CAA0B,GAA1B;AACD,KAFC,CAAF;AAGAF,IAAAA,EAAE,CAAC,eAAD,EAAkB,YAAM;AACxBC,MAAAA,MAAM,CAACK,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAAClB,IAAjB,CAAD,CAAN,CAA+BuB,OAA/B,CAAuC;AACrCtB,QAAAA,UAAU,EAAE,EADyB;AAErCC,QAAAA,EAAE,EAAE,CAFiC;AAGrCC,QAAAA,KAAK,EAAE,CAH8B;AAIrCC,QAAAA,KAAK,EAAE,CAJ8B;AAKrCC,QAAAA,KAAK,EAAE,QAL8B;AAMrCC,QAAAA,WAAW,EAAE,QANwB;AAOrCC,QAAAA,MAAM,EAAE;AAP6B,OAAvC;AASD,KAVC,CAAF;AAWD,GA7BO,CAAR;AA8BD,CA1DO,CAAR",
      "sourceRoot": "C:\\Users\\AMAECHI\\Documents\\Andela\\Auto Mart\\Server\\spec",
      "sourcesContent": [
        "/* eslint-env jasmine */\nimport Request from 'request';\nimport Server from '../src/server';\n// import storage from '../storage';\n\nconst start = () => Server;\nstart();\n\ndescribe('creating a new order', () => {\n  const data = {};\n  const options = {\n    url: 'http://localhost:3000/api/v1/order/',\n    json: true,\n    method: 'post',\n    headers: {\n      sender: 'user',\n    },\n    body: {\n      created_on: '',\n      id: 7,\n      buyer: 2,\n      carId: 1,\n      price: 13700000,\n      price_offer: 12000000,\n      status: 'pending',\n    },\n  };\n  beforeAll((done) => {\n    Request.post(options, (error, response) => {\n      data.status = response.statusCode;\n      done();\n    });\n  });\n  it('status 201', () => {\n    expect(data.status).toBe(201);\n  });\n  describe('check if order was created', () => {\n    const data2 = {};\n    const options2 = {\n      url: 'http://localhost:3000/api/v1/order/7',\n      headers: {\n        sender: 'user',\n      },\n    };\n    beforeAll((done) => {\n      Request.get(options2, (error, response, body) => {\n        data2.status = response.statusCode;\n        data2.body = body;\n        done();\n      });\n    });\n    it('status 200', () => {\n      expect(data2.status).toBe(200);\n    });\n    it('aorder object', () => {\n      expect(JSON.parse(data2.body)).toEqual({\n        created_on: '',\n        id: 7,\n        buyer: 2,\n        carId: 1,\n        price: 13700000,\n        price_offer: 12000000,\n        status: 'pending',\n      });\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560436462558
  }
}